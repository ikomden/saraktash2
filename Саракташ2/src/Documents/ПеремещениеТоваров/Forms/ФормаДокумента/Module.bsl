
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ДокументОснование.Видимость = ЗначениеЗаполнено(Объект.ДокументОснование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)   	
	  
	Если Объект.СкладОтправитель = ПредопределенноеЗначение("Справочник.Склады.Саракташ") 
		Или Объект.СкладОтправитель = ПредопределенноеЗначение("Справочник.Склады.РынокСаракташ") Тогда 
		
		ПараметрыФормы = Новый Структура("Ключ", Объект.Ссылка); 
		ПараметрыФормы.Вставить("ЗначенияЗаполнения"
		, Новый Структура("СкладОтправитель", Объект.СкладОтправитель));
		ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаПеремещенияСПроизводства", ПараметрыФормы);
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)	
	Отказ = Истина; // добавлять Подбором или по остаткам, чтобы исключить ошибки 	
КонецПроцедуры

Процедура ЗаполнитьПоОстаткамНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.КоличествоОстаток КАК Количество,
	|	ЗапасыПоСерийнымНомерамОстатки.СерийныйНомер КАК СерийныйНомер,
	|	ЗапасыПоСерийнымНомерамОстатки.СерийныйНомер.Бирка КАК Бирка,
	|	ЗапасыПоСерийнымНомерамОстатки.СерийныйНомер.Наименование КАК СерийныйНомерНаименование,
	|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(, Склад = &Склад) КАК ЗапасыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыПоСерийнымНомерам.Остатки(, Склад = &Склад) КАК ЗапасыПоСерийнымНомерамОстатки
	|		ПО ЗапасыОстатки.Номенклатура = ЗапасыПоСерийнымНомерамОстатки.СерийныйНомер.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	СерийныйНомерНаименование
	|ИТОГИ
	|	СУММА(Количество),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СерийныйНомер)
	|ПО
	|	Номенклатура,
	|	Бирка";
	Запрос.УстановитьПараметр("Склад", Объект.СкладОтправитель);
	
	Объект.Товары.Очистить();
	Объект.СерийныеНомера.Очистить();
	Объект.Недочеты.Очистить();
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТовары.Следующий() Цикл
		
		НоваяСтрокаТовары = Объект.Товары.Добавить();
		НоваяСтрокаТовары.Номенклатура = ВыборкаТовары.Номеклатура;
		НоваяСтрокаТовары.ЕдиницаИзмерения 	= ВыборкаТовары.ЕдиницаИзмерения;
		НоваяСтрокаТовары.КлючСтроки 		= Новый УникальныйИдентификатор;
		
		ВыборкаБирки = ВыборкаТовары.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаБирки.Следующий() Цикл			
			
			ВыборкаСерийники = ВыборкаБирки.Выбрать();
			Пока ВыборкаСерийники.Следующий() Цикл			
				НоваяСтрокаСерийник = Объект.СерийныеНомера.Добавить();	
				НоваяСтрокаСерийник.КлючСтроки 		= НоваяСтрокаТовары.КлючСтроки;	
				НоваяСтрокаСерийник.СерийныйНомер 	= ВыборкаСерийники.СерийныйНомер;
			КонецЦикла;		
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.СкладОтправитель) Тогда
		ПоказатьПредупреждение(, "Не указан склад, с которого перемещают товар");
		Возврат;
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ПерезаполнитьТоварыПоОстаткамПродолжение", ЭтаФорма);
	Если Объект.Товары.Количество() > 0 Тогда
		ПоказатьВопрос(ОбработчикОповещения, "Не указан склад, с которого перемещают товар", РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(ОбработчикОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьТоварыПоОстаткамПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоОстаткамНаСервере();

КонецПроцедуры

