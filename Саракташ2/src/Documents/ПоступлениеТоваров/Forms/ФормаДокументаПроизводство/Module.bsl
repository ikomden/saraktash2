
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ЗаказОснование.Видимость = (ЗначениеЗаполнено(Объект.ЗаказОснование));
	Если Параметры.Ключ.Пустая() Тогда
		Объект.РегистрироватьЦены = Истина;
	Иначе
		ЭтоПриемкаРыночныхИзделий = Объект.Склад = Справочники.Склады.РынокСаракташ;
	КонецЕсли;
	
	НовыйМассив = Новый Массив;
	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ПовторноеИспользованиеСервер.РазмерДляПлатков());
	НовыйМассив.Добавить(НовыйПараметр); 	
	
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ТоварыРазмер.ПараметрыВыбора = НовыеПараметры;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Клиент.РассчитатьСуммуТЧ(Элементы.Товары.ТекущиеДанные,Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		ТекДанные.Цена = 0;
		ТекДанные.ЦенаЗаРаботу = 0;  
		ТекДанные.ВязальщицаНаСайте = ПредопределенноеЗначение("Справочник.Мастерицы.ПустаяСсылка");
		ТекДанные.Размер = ПредопределенноеЗначение("Справочник.ДополнительныеЗначенияРеквизитов.ПустаяСсылка");
	Иначе
		ЦеныЗакупки = СлужебныйСервер.ЦеныЗакупки(ТекДанные.Номенклатура, Объект.Поставщик, ?(Параметры.Ключ.Пустая(), Неопределено, Объект.Дата));
		ТекЦена = ЦеныЗакупки[ТекДанные.Номенклатура];
		ТекДанные.Цена = ?(ЗначениеЗаполнено(ТекЦена),ТекЦена,0);
		ТекДанные.ВязальщицаНаСайте = МастерицаПоУмолчанию(ТекДанные.Номенклатура); 
		ТекДанные.Размер = РазмерПоУмолчанию(ТекДанные.Номенклатура);
		ТекДанные.Сорт = ПредопределенноеЗначение("Перечисление.Сорта.ПервыйСорт");
		ТекДанные.ЦенаЗаРаботу = ЦенаЗаРаботу(ТекДанные.Номенклатура);  
	КонецЕсли;
	
КонецПроцедуры

&НаСерверебезКонтекста
Функция МастерицаПоУмолчанию(Номенклатура) 
	Возврат Справочники.Номенклатура.МастерицаПоУмолчанию(Номенклатура);	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//ВладелецФормы
	Если Объект.Опт = Истина 
		Или (ВладелецФормы <> Неопределено И ВладелецФормы.Родитель.Заголовок = "Поступление товаров (Опт)") Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", Объект.Ссылка); 
		ОткрытьФорму("Документ.ПоступлениеТоваров.Форма.ФормаДокументаОпт", ПараметрыФормы);
	
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьСервер(ТДПечать, МакетПечати, ДополнительныеПараметры)
	
	ТДПечатнаяФормаДокумента = Документы.ПоступлениеТоваров.ПолучитьПечатнуюФорму(Объект, МакетПечати, ДополнительныеПараметры);			
	ТДПечать.Вывести(ТДПечатнаяФормаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТоварыПечать" Тогда		
		
		МакетПечати = "ПечатьНаклеек";
		
		ДополнительныеПараметры = Новый Структура("ТолькоТовар", Элементы.Товары.ТекущиеДанные.НомерСтроки);
		
		ТДПечать = Новый ТабличныйДокумент;
		ПечатьСервер(ТДПечать, МакетПечати, ДополнительныеПараметры);
		ТДПечать.ОтображатьСетку = Ложь;
		ТДПечать.Защита = Ложь;
		ТДПечать.ТолькоПросмотр = Ложь;
		ТДПечать.ОтображатьЗаголовки = Ложь;
		ТДПечать.АвтоМасштаб = Истина;
		
		////Для наклеек свой принтер
		ТДПечать.ИмяПринтера = ПолныеПрава.ПолучитьЗначениеКонстанты("ИмяПринтераПечатьЭтикеток");
		ТДПечать.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТДПечать.ПолеСверху = 4;
		ТДПечать.ПолеСлева = 18;		
		ТДПечать.ПолеСнизу = 2;
		ТДПечать.ПолеСправа = 0;
		ТДПечать.Показать("Печать: Наклейки");
		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен()
		И Не ТолькоПросмотр Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияКлиентПереопределяемый.ЕстьНеобработанноеСобытие() Тогда
			
				ДанныеШтрихкодов = МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр);
				
				НомерСчитанныйТовар = 0;
				ОбработатьШтрихкоды(ДанныеШтрихкодов, НомерСчитанныйТовар);
								
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов, НомерСчитанныйТовар)
	
	Элементы.Товары.ТекущаяСтрока = 0;
	
	Для Каждого стШК Из ДанныеШтрихкодов Цикл 
		//Сообщить(стШК.Штрихкод + " - "  + стШК.Количество);
		
		НоменклатураПоШК = Неопределено;
		//Найти товар по ШК и добавить в ТЧ.Товары
		Если СтрДлина(стШК.Штрихкод) > 9 Тогда
			Попытка
				НоменклатураПоШК = Справочники.Номенклатура.НайтиПоРеквизиту("IDНаСайте", Число(Сред(стШК.Штрихкод, 7, 4))); //180814123400900 			
			Исключение  			
			КонецПопытки;
		Иначе 		
			Если НоменклатураПоШК = Неопределено Тогда
				Попытка
					НоменклатураПоШК = Справочники.Номенклатура.НайтиПоКоду(стШК.Штрихкод);  			
				Исключение
					Возврат;
				КонецПопытки;		
			КонецЕсли;
		КонецЕсли;
		
		//00000000-0000-0000-0000-000000000000
			
		Если Не ЗначениеЗаполнено(НоменклатураПоШК) Тогда 
			Сообщить("Товар с кодом " + Сред(стШК.Штрихкод, 7, 4) + " не найден!");
		Иначе 
			
			мсСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", НоменклатураПоШК));
			
			Если мсСтроки.Количество() = 0 Тогда   				
				
				нСтрока = Объект.Товары.Добавить();
				нСтрока.Номенклатура = НоменклатураПоШК;
				нСтрока.Количество = стШК.Количество;
				нСтрока.ЕдиницаИзмерения = нСтрока.Номенклатура.ЕдиницаИзмерения;
				
				ЦеныЗакупки = СлужебныйСервер.ЦеныЗакупки(нСтрока.Номенклатура, Объект.Поставщик, ?(Параметры.Ключ.Пустая(), Неопределено, Объект.Дата));
				ТекЦена = ЦеныЗакупки[нСтрока.Номенклатура];
				нСтрока.Цена = ?(ЗначениеЗаполнено(ТекЦена),ТекЦена,0);  
				
				Элементы.Товары.ТекущаяСтрока = нСтрока.ПолучитьИдентификатор();
				
				НомерСчитанныйТовар = нСтрока.НомерСтроки - 1;
				
			Иначе  				
				
				мсСтроки[0].Количество = мсСтроки[0].Количество + стШК.Количество;
				
				Попытка
					Элементы.Товары.ТекущаяСтрока = мсСтроки[0].ПолучитьИдентификатор();
				Исключение
				КонецПопытки;
				
				НомерСчитанныйТовар = мсСтроки[0].НомерСтроки - 1;  					
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСерверебезКонтекста
Функция РазмерПоУмолчанию(Номенклатура) 
	Возврат Справочники.Номенклатура.РазмерПоУмолчанию(Номенклатура);	
КонецФункции

&НаСерверебезКонтекста
Функция ЦенаЗаРаботу(Номенклатура) 
	Возврат Справочники.Номенклатура.ЦенаЗаРаботу(Номенклатура);	
КонецФункции

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элемент.ТекущиеДанные.Количество = ?(Элемент.ТекущиеДанные.Количество = 0, 1, Элемент.ТекущиеДанные.Количество);
	Если Копирование Тогда
		Элемент.ТекущиеДанные.КлючСтроки = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСортПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	ТоварыСортПриИзмененииНаСервере(Элементы.Товары.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыСортПриИзмененииНаСервере(ИдентификаторСтроки)
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
	ЦенаЗаРаботу = ЦенаЗаРаботу(ТекущиеДанные.Номенклатура); 
	Если ТекущиеДанные.ЦенаЗаРаботу <> ЦенаЗаРаботу Тогда
		Возврат;
	КонецЕсли;
	
	УменьшениеЦеныЗаРаботу = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура, "УменьшениеЦеныЗаРаботу");
	ТекущиеДанные.ЦенаЗаРаботу = ТекущиеДанные.ЦенаЗаРаботу - УменьшениеЦеныЗаРаботу;
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныеНомераВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ДанныеСтроки(ВыбраннаяСтрока).СерийныйНомер);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ТоварыРазмер.Видимость = Не ЭтоПриемкаРыночныхИзделий;
	Элементы.ТоварыБирка.Видимость = Не ЭтоПриемкаРыночныхИзделий;
	Элементы.ТоварыВязальщицаНаСайте.Видимость = Не ЭтоПриемкаРыночныхИзделий;
	Элементы.ТоварыЦенаЗаРаботу.Видимость = Не ЭтоПриемкаРыночныхИзделий;
	Элементы.ТоварыПечать.Видимость = Не ЭтоПриемкаРыночныхИзделий;
	Элементы.ТоварыКомментарий.Видимость = Не ЭтоПриемкаРыночныхИзделий; 
		
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ЭтоПриемкаРыночныхИзделий = Объект.Склад = ПредопределенноеЗначение("Справочник.Склады.РынокСаракташ");
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаТовары Из ТекущийОбъект.Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТовары.КлючСтроки) Тогда
			СтрокаТовары.КлючСтроки = Новый УникальныйИдентификатор;
		КонецЕсли; 
	КонецЦикла;		
	
КонецПроцедуры
