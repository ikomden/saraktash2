
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Запасы.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Запасы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;   		
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;   
	
	Если ЗначениеЗаполнено(ЗаказОснование) Тогда
		Движения.ОжидаемыеТовары.Записывать = Истина;
		Если ЗначениеЗаполнено(ЗаказОснование) Тогда
			Для Каждого ТекСтрокаТовары Из Товары Цикл
				Движение = Движения.ОжидаемыеТовары.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.Заказ = ЗаказОснование;
				Движение.Количество = ТекСтрокаТовары.Количество;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Движения.ЦеныЗакупки.Записывать = Истина;
	Если РегистрироватьЦены Тогда
		ПрежниеЦены = СлужебныйСервер.ЦеныЗакупки(ТОвары.ВыгрузитьКолонку("Номенклатура"), Поставщик, Дата);		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Если Не ЗначениеЗаполнено(ТекСтрокаТовары.Цена) ИЛИ ТекСтрокаТовары.Цена = ПрежниеЦены[ТекСтрокаТовары.Номенклатура] Тогда
				Продолжить;
			КонецЕсли;
			Движение = Движения.ЦеныЗакупки.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;   		
			Движение.Контрагент = Поставщик;
			Движение.Строка = ТекСтрокаТовары.НомерСтроки;
			Движение.Цена = ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
	
	УчетСебестоимости.УчестьСебестоимость(ЭтотОбъект,РежимПроведения,Отказ);
	
	Движения.ЗапасыПоСерийнымНомерам.Записывать = Истина;  
	Если Поставщик = ПовторноеИспользованиеСервер.ПоставщикПроизводства() Тогда
							
		Для Каждого СтрокаТовар Из Товары Цикл
			
			НайденныеСерийники = СерийныеНомера.НайтиСтроки(Новый Структура("КлючСтроки", СтрокаТовар.КлючСтроки));
			Для Каждого СтрокаСерийныйНомер Из НайденныеСерийники Цикл
				
				Набор = РегистрыСведений.ДанныеСерийныхНомеров.СоздатьНаборЗаписей(); 							
				
				Набор.Отбор.СерийныйНомер.Установить(СтрокаСерийныйНомер.СерийныйНомер);
				Набор.Прочитать();
				Запись = ?(Набор.Количество(), Набор[0], Набор.Добавить());
				Если Ложь Тогда Запись = Набор.Добавить(); КонецЕсли;
				Запись.СерийныйНомер = СтрокаСерийныйНомер.СерийныйНомер;
				Запись.АртикулСтарый = СтрокаТовар.Номенклатура;
				Запись.Вязальщица = СтрокаТовар.Вязальщица;
				Запись.ВязальщицаНаСайте = СтрокаТовар.ВязальщицаНаСайте;
				Запись.ДатаПоступления = Дата;
				Запись.Размер = СтрокаТовар.Размер;
				Запись.Вес = СтрокаТовар.Вес;
				Запись.Бирка = СтрокаТовар.Бирка;
				Запись.Приемка = Ссылка; 
				Если Не СтрНайти(Запись.Комментарий, СтрокаТовар.Комментарий) Тогда
					Запись.Комментарий = СокрЛП(Запись.Комментарий + Символы.ПС + СтрокаТовар.Комментарий); 
				КонецЕсли;
				Запись.Сорт = СтрокаТовар.Сорт;
				Запись.ЦенаЗаРаботу = СтрокаТовар.ЦенаЗаРаботу;
				Набор.Записать();				
				
				Движение = Движения.ЗапасыПоСерийнымНомерам.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.СерийныйНомер = СтрокаСерийныйНомер.СерийныйНомер;   		
				Движение.Склад = Склад;
				Движение.Количество = 1;
				
			КонецЦикла;			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьСерийныйНомер(Номенклатура)
	
	НовыйНомер = Справочники.СерийныеНомера.СоздатьЭлемент();
	НовыйНомер.Владелец = Номенклатура;
	НовыйНомер.УстановитьНовыйКод();
	ШК = "235333" + Формат(НовыйНомер.Код, "ЧЦ=6; ЧВН=; ЧГ=0");
	НовыйНомер.Наименование = ШК + КонтрольныйСимвол(ШК);
	
	НовыйНомер.Записать();
	Возврат НовыйНомер.Ссылка;
	
КонецФункции

Функция КонтрольныйСимвол(Штрихкод) 	
	
	Коэффициент = 1;
	Сумма = 0;
	Для Сч = 1 По 12 Цикл
		ВремКодСимвола = КодСимвола(Штрихкод, Сч);
		Сумма  = Сумма + Коэффициент * (ВремКодСимвола - 48);
		Коэффициент = 4 - Коэффициент;
	КонецЦикла;
	Сумма = (10 - Сумма % 10) % 10;
	Возврат Символ(Сумма + 48); 	
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
		Поставщик = ДанныеЗаполнения.Поставщик;
		ЗаказОснование = ДанныеЗаполнения;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Если Поставщик = ПовторноеИспользованиеСервер.ПоставщикПроизводства() Тогда
		Для Каждого СтрокаТовар Из Товары Цикл	
			
			Если Не СтрокаТовар.Номенклатура.ИспользоватьСерийныеНомера Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаТовар.Количество > 1 И ЗначениеЗаполнено(СтрокаТовар.Бирка) Тогда
				Отказ = Истина;
				Текст = "В строке " 
				+ СтрокаТовар.НомерСтроки
				+ " указана бирка и количество более 1. Присвоить бирку можно только с количеством 1";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст
				, ЭтотОбъект
				,
				, "Товары[" + (СтрокаТовар.НомерСтроки - 1) + "].Количество");  				
				Возврат;
			КонецЕсли;
			
			//Если Не ЗначениеЗаполнено(СтрокаТовар.СерийныйНомер) Тогда
			//	СтрокаТовар.СерийныйНомер = СоздатьСерийныйНомер(СтрокаТовар.Номенклатура);	
			//КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТовар.ЕдиницаИзмерения)
				И ЗначениеЗаполнено(СтрокаТовар.Номенклатура) Тогда
				СтрокаТовар.ЕдиницаИзмерения = СтрокаТовар.Номенклатура.ЕдиницаИзмерения;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТовар.Количество) Тогда
				СтрокаТовар.Количество = 1;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТовар.Сумма) Тогда
				СтрокаТовар.Сумма = СтрокаТовар.Цена;
			КонецЕсли;
			
			КоличествоТовара = Макс(СтрокаТовар.Количество, 1); 
			НайденныеСерийники = СерийныеНомера.НайтиСтроки(Новый Структура("КлючСтроки", СтрокаТовар.КлючСтроки));
			Если НайденныеСерийники.Количество() = КоличествоТовара Тогда
				Продолжить;
			КонецЕсли;
			
			Если НайденныеСерийники.Количество() < КоличествоТовара Тогда
				Для Счетчик = 1 По КоличествоТовара - НайденныеСерийники.Количество() Цикл
					нс = СерийныеНомера.Добавить();
					нс.КлючСтроки = СтрокаТовар.КлючСтроки;
					нс.СерийныйНомер = СоздатьСерийныйНомер(СтрокаТовар.Номенклатура);
				КонецЦикла;
			КонецЕсли;
			
			Если НайденныеСерийники.Количество() > КоличествоТовара Тогда
				КоличествоЛишних = НайденныеСерийники.Количество() - КоличествоТовара; 
				Для Счетчик = 1 По КоличествоЛишних Цикл
					СерийныеНомера.Удалить(НайденныеСерийники[Счетчик - 1]);
				КонецЦикла;
			КонецЕсли; 			
			
		КонецЦикла;
	//КонецЕсли;
	
	УдалитьСерийные = Новый Массив;
	Для Каждого СтрокаСерийныйНомер Из СерийныеНомера Цикл
		НайденныеКлючи = Товары.НайтиСтроки(Новый Структура("КлючСтроки", СтрокаСерийныйНомер.КлючСтроки));	
		Если НайденныеКлючи.Количество() = 0 Тогда
			УдалитьСерийные.Добавить(СтрокаСерийныйНомер);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрока Из УдалитьСерийные Цикл
		СерийныеНомера.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
КонецПроцедуры
