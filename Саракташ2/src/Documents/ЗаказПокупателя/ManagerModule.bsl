Функция ПолучитьПечатнуюФорму(Ссылка,МакетПечати, ДополнительныеПараметры = Неопределено) Экспорт 
	
	ТД = Новый ТабличныйДокумент;
	ДокЗаказ = Ссылка.ПолучитьОбъект();
	//ДокЗаказ = Документы.ЗаказПокупателя.СоздатьДокумент();
	
	Если МакетПечати = "ПечатьЗаказов" Тогда
		
		Макет = Документы.ЗаказПокупателя.ПолучитьМакет("ТоварнаяНакладная");
		
		//Шапка
		облШапка = Макет.ПолучитьОбласть("Шапка");
		облШапка.Параметры.IDНаСайте = Формат(ДокЗаказ.IDНаСайте,"ЧГ=0");
		облШапка.Параметры.НомерЗаказаВнешний = Формат(ДокЗаказ.НомерЗаказаВнешний,"ЧГ=0");		
		облШапка.Параметры.ДатаЗаказа = Формат(ДокЗаказ.Дата,"ДЛФ=DD"); //"05" марта 2017 г.
		облШапка.Параметры.ДлинныйЮридическийТекстМелкимШрифтомВерх = Константы.ТекстДляПечатиЗаказовВерх.Получить();
		ТД.Вывести(облШапка);
		
		//ТЧ товары
		Для Каждого Строка ИЗ ДокЗаказ.Товары Цикл
			
			облСтрока = Макет.ПолучитьОбласть("Строка");
			облСтрока.Параметры.Заполнить(Строка);
			облСтрока.Параметры.Артикул = Строка.Номенклатура.Артикул;
			облСтрока.Параметры.Сумма = Формат(Строка.СуммаСоСкидкой,"ЧЦ=15; ЧДЦ=2");
			облСтрока.Параметры.Цена = ?(Строка.Количество = 0,Строка.СуммаСоСкидкой, Формат(Строка.СуммаСоСкидкой/Строка.Количество,"ЧЦ=15; ЧДЦ=2"));
			ТД.Вывести(облСтрока);		
			
		КонецЦикла;
		
		//Услуги
		СуммаДоставки = 0;
		КоличествоДоставки = 0;
		Если ЗначениеЗаполнено(ДокЗаказ.СпособДоставки) Тогда 
			
			КоличествоДоставки = 1;
			СуммаДоставки = ДокЗаказ.СтоимостьДоставкиССайта;
			
			облСтрока = Макет.ПолучитьОбласть("Строка");
			//облСтрока.Параметры.Номенклатура = ДокЗаказ.СпособДоставки;
			облСтрока.Параметры.Номенклатура = "Доставка"; //В товарной накладной вместо почта россии, курьерская служба... должно быть написано Доставка
			облСтрока.Параметры.Количество = КоличествоДоставки;
			облСтрока.Параметры.Сумма = Формат(СуммаДоставки,"ЧЦ=15; ЧДЦ=2");
			ТД.Вывести(облСтрока);	
			
		КонецЕсли;
		
		//Подвал
		облПодвал = Макет.ПолучитьОбласть("Подвал");		
		облПодвал.Параметры.ИтогоКоличество = ДокЗаказ.Товары.Итог("Количество") + КоличествоДоставки;
		облПодвал.Параметры.ИтогоСумма = Формат(ДокЗаказ.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
		облПодвал.Параметры.ИтогоПрописью = ЧислоПрописью(ДокЗаказ.СуммаДокумента,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		//облПодвал.Параметры.Контрагент = ДокЗаказ.Контрагент;
		облПодвал.Параметры.ДлинныйЮридическийТекстМелкимШрифтом = Константы.ТекстДляПечатиЗаказов.Получить();		
		
		//Для Каждого СтрокаКИ Из ДокЗаказ.Контрагент.КонтактнаяИнформация Цикл
		//	Если СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		//		облПодвал.Параметры.Адрес = СтрокаКИ.Представление;
		//	ИначеЕсли СтрокаКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		//		облПодвал.Параметры.Телефон = СтрокаКИ.Представление;				
		//	КонецЕсли;				
		//КонецЦикла;
		
		ТД.Вывести(облПодвал);
		ТД.ВывестиГоризонтальныйРазделительСтраниц();
		
	ИначеЕсли МакетПечати = "ПечатьНаклеек" ИЛИ МакетПечати = "ПечатьПервыхНаклеек" Тогда
		
		//ИспользоватьРедактируемыйМакет = Истина;
		//ИспользоватьРедактируемыйМакет = Ложь;
		ИспользоватьРедактируемыйМакет = Константы.ИспользоватьРедактируемыйМакетНаклейки.Получить(); 
		
		Если ИспользоватьРедактируемыйМакет Тогда
			
			ХЗ = Константы.Наклейка.Получить();
			ДД = ХЗ.Получить();
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
			ДД.Записать(ИмяВременногоФайла);
			
			Макет = Новый ТабличныйДокумент;
			Макет.Прочитать(ИмяВременногоФайла);
			
		Иначе
			
			Макет = Документы.ЗаказПокупателя.ПолучитьМакет("Наклейка");
			
		КонецЕсли;
		
		облТекстШапка = Макет.ПолучитьОбласть("ОбластьТекст0");
		облТекст = Макет.ПолучитьОбласть("ОбластьТекст1");
		облШК = Макет.ПолучитьОбласть("ОбластьШК");
		
		//Данные заказа
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ПропускПервойЭтикетки") Тогда 
			//
		Иначе
			
			ЗаказТекст = "" + Формат(ДокЗаказ.IDНаСайте,"ЧГ=0") + Символы.ПС;
			Сч = 0;
			ВсегоСтрок = ДокЗаказ.Товары.Количество();
			Для Каждого Строка Из ДокЗаказ.Товары Цикл
				Сч = Сч + 1;
				ЗаказТекст = ЗаказТекст + Строка.Номенклатура.Артикул + "-" + Строка.Количество;
				Если Сч < ВсегоСтрок Тогда
					ЗаказТекст = ЗаказТекст + ", ";
				КонецЕсли;
			КонецЦикла;		
			облТекстШапка.Параметры.Заполнить(Новый Структура("ЗаказТекст", ЗаказТекст));
			ТД.Вывести(облТекстШапка);		
			ТД.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		Если МакетПечати = "ПечатьНаклеек" Тогда
			
			//Данные по товарам
			Для Каждого Строка Из ДокЗаказ.Товары Цикл
				
				Для Сч=1 По Строка.Количество Цикл //Печатать наклеек на изделия столько, сколько штук изделий
					
					Если Строка.Номенклатура.НеПечататьЭтикетку = Истина Тогда 
						Продолжить;
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда 
						Продолжить;	
					КонецЕсли;
					
					//////ТоварТекст = "Артикул: " + Символы.ПС + " " + Строка.Номенклатура.Артикул + Символы.ПС;
					//////
					////////Состав
					//////нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Состав")));
					//////Для Каждого нСтрока Из нСтроки Цикл				
					//////	ТоварТекст = ТоварТекст + "Состав: " + Символы.ПС + " " + нСтрока.Значение + Символы.ПС;				
					//////КонецЦикла;
					//////
					////////Производство
					//////нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Производство")));
					//////Для Каждого нСтрока Из нСтроки Цикл				
					//////	ТоварТекст = ТоварТекст + "Производство: " + Символы.ПС + " " + нСтрока.Значение + Символы.ПС;				
					//////КонецЦикла;
					//////
					////////Цвет
					//////нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Цвет")));
					//////Для Каждого нСтрока Из нСтроки Цикл				
					//////	ТоварТекст = ТоварТекст + "Цвет: " + Символы.ПС + " " + нСтрока.Значение + Символы.ПС;				
					//////КонецЦикла;
					//////
					////////Размер
					//////нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Размер")));
					//////Для Каждого нСтрока Из нСтроки Цикл				
					//////	ТоварТекст = ТоварТекст + "Размер: " + Символы.ПС + " " + нСтрока.Значение + Символы.ПС;				
					//////КонецЦикла;
					
					//облТекст.Параметры.Текст = ТоварТекст;
					
					///
					стПараметры = Новый Структура;
					
					стПараметры.Вставить("Артикул", Строка.Номенклатура.Артикул);
					
					//Состав
					нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Состав")));
					Для Каждого нСтрока Из нСтроки Цикл				
						стПараметры.Вставить("Состав", нСтрока.Значение);
					КонецЦикла;
					
					//Производство
					нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Производство")));
					Для Каждого нСтрока Из нСтроки Цикл				
						стПараметры.Вставить("Производство", нСтрока.Значение);
					КонецЦикла;
					
					//Цвет
					нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Цвет")));
					Для Каждого нСтрока Из нСтроки Цикл				
						стПараметры.Вставить("Цвет", нСтрока.Значение);
					КонецЦикла;
					
					//Размер
					нСтроки = Строка.Номенклатура.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоНаименованию("Размер")));
					Для Каждого нСтрока Из нСтроки Цикл				
						стПараметры.Вставить("Размер", нСтрока.Значение);
					КонецЦикла;
					
					облТекст.Параметры.Заполнить(стПараметры);
					///
					
					
					ТД.Вывести(облТекст);
					
					//Вывод ШК
					Попытка
						
						//Цена = 0;
						
						
						облШК.Рисунки.ШК.Объект.ТипКода = 4;
						Если Не Строка.Номенклатура.ОптовыйТовар Тогда
							Штрихкод =
							Формат(ДокЗаказ.Дата, "ДФ=yyMMdd") + 
							Прав("0000" + Формат(Строка.Номенклатура.IDНаСайте, "ЧДЦ=; ЧГ=0"), 4) +	
							Прав("00000" + Формат(Строка.Цена, "ЧДЦ=; ЧГ=0"), 5);
						Иначе
							Штрихкод = СлужебныйСервер.ШтрихкодНоменклатуры(Строка.Номенклатура);	
						КонецЕсли;
						
						облШК.Рисунки.ШК.Объект.СодержитКС = Истина;
						облШК.Рисунки.ШК.Объект.ТекстКода = Штрихкод;					
						облШК.Рисунки.ШК.Объект.Сообщение = Штрихкод;
						
					Исключение
					КонецПопытки;
					
					ТД.Вывести(облШК);
					
					ТД.ВывестиГоризонтальныйРазделительСтраниц();
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;

	ИначеЕсли МакетПечати = "ПечатьБланковФ7" Тогда
		
		Макет = Документы.ЗаказПокупателя.ПолучитьМакет("ПечатьБланковФ7");
		
		облБланк = Макет.ПолучитьОбласть("ОбластьБланк");
		
		//Заполнение параметров
		//
		ОтКогоФИО = Константы.ПечатьФ7ОтКого.Получить();
		мсОтКогоФИО = РазбитьСтроку(ОтКогоФИО,25);
		Если мсОтКогоФИО.Количество() >= 1 Тогда 
			облБланк.Параметры.ОтКогоФИОСтрока1 = мсОтКогоФИО[0];
		КонецЕсли;
		Если мсОтКогоФИО.Количество() >= 2 Тогда 
			облБланк.Параметры.ОтКогоФИОСтрока2 = мсОтКогоФИО[1];
		КонецЕсли;
		
		//
		ОтКогоАдрес = Константы.ПечатьФ7Адрес.Получить();
		мсОтКогоАдрес = РазбитьСтроку(ОтКогоАдрес,28);
		Если мсОтКогоАдрес.Количество() >= 1 Тогда 
			облБланк.Параметры.ОтКогоАдресСтрока1 = мсОтКогоАдрес[0];
		КонецЕсли;
		Если мсОтКогоАдрес.Количество() >= 2 Тогда 
			облБланк.Параметры.ОтКогоАдресСтрока2 = мсОтКогоАдрес[1];
		КонецЕсли;
		Если мсОтКогоАдрес.Количество() >= 3 Тогда 
			облБланк.Параметры.ОтКогоАдресСтрока3 = мсОтКогоАдрес[2];
		КонецЕсли;
		
		//
		облБланк.Параметры.ОтКогоИндекс = Константы.ПечатьФ7Индекс.Получить();
		
		//
		//СуммаОбъявленнойЦенности = ЧислоПрописью(ДокЗаказ.СуммаДокумента,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		СуммаОбъявленнойЦенности = ДокЗаказ.СуммаДокумента;
		СуммаОбъявленнойЦенностиРуб = Цел(СуммаОбъявленнойЦенности);
		СуммаОбъявленнойЦенностиКоп = (СуммаОбъявленнойЦенности - Цел(СуммаОбъявленнойЦенности)) * 100;
		
		облБланк.Параметры.СуммаОбъявленнойЦенности = "" + СуммаОбъявленнойЦенностиРуб + " руб " + СуммаОбъявленнойЦенностиКоп + " коп";
		
		Если ДокЗаказ.МетодОплаты = Справочники.МетодыОплаты.НайтиПоКоду("000000001") Тогда //Наличными при получении //Сумма наложенного д/быть если оплата при получении
			облБланк.Параметры.СуммаНаложногоПлатежа = облБланк.Параметры.СуммаОбъявленнойЦенности;
		КонецЕсли;
		
		//
		КомуФИОСтрока = ДокЗаказ.Контрагент.Наименование;		
		//мсКомуФИО = РазбитьСтроку(КомуФИОСтрока,35);
		//Если мсКомуФИО.Количество() >= 1 Тогда 
		//	облБланк.Параметры.КомуФИОСтрока1 = мсКомуФИО[0];
		//КонецЕсли;
		//Если мсКомуФИО.Количество() >= 2 Тогда 
		//	облБланк.Параметры.КомуФИОСтрока1 = мсКомуФИО[1];
		//КонецЕсли;
		ЧастиИмени = СтрРазделить(КомуФИОСтрока, " ");
		облБланк.Параметры.КомуФИОСтрока1 = ЧастиИмени[0];
		Если ЧастиИмени.Количество() > 1 Тогда
			ОстЧасти = "";
			Для инд=1 По ЧастиИмени.ВГраница() Цикл
				ОстЧасти = ОстЧасти+?(ПустаяСтрока(ОстЧасти),""," ")+СокрЛП(ЧастиИмени[инд]);
				облБланк.Параметры.КомуФИОСтрока2 = ОстЧасти;
			КонецЦикла;
		КонецЕсли;
		
		//
		КомуАдресСтрока = "";
		//Получить адрес
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыКонтактнаяИнформация.Представление КАК АдресПредставление
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтрагентыКонтактнаяИнформация.Тип = &ТипАдрес";
		
		Запрос.УстановитьПараметр("Ссылка", ДокЗаказ.Контрагент);
		Запрос.УстановитьПараметр("ТипАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			КомуАдресСтрока = Выборка.АдресПредставление;
		КонецЦикла;
		
		мсКомуАдрес = РазбитьСтроку(КомуАдресСтрока,35);
		Если мсКомуАдрес.Количество() >= 1 Тогда 
			облБланк.Параметры.КомуАдресСтрока1 = мсКомуАдрес[0];
		КонецЕсли;
		Если мсКомуАдрес.Количество() >= 2 Тогда 
			облБланк.Параметры.КомуАдресСтрока2 = мсКомуАдрес[1];
		КонецЕсли;
		Если мсКомуАдрес.Количество() >= 3 Тогда 
			облБланк.Параметры.КомуАдресСтрока3 = мсКомуАдрес[2];
		КонецЕсли;
		
		облБланк.Параметры.КомуАдресСтрока4 = "№" + Формат(Ссылка.IDНаСайте, "ЧГ=0") + "; ";
		Для Каждого СтрокаТовары Из Ссылка.Товары Цикл
			
			Если СтрДлина(облБланк.Параметры.КомуАдресСтрока4) > 35 Тогда
				облБланк.Параметры.КомуАдресСтрока4 = облБланк.Параметры.КомуАдресСтрока4 + " ... ";
				Прервать;
			Иначе
				облБланк.Параметры.КомуАдресСтрока4 = облБланк.Параметры.КомуАдресСтрока4 + СтрокаТовары.Номенклатура.Артикул + "-" + СтрокаТовары.Количество + "; ";			
			КонецЕсли;
			
		КонецЦикла;
		
		//
		КомуИндекс = "";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыКонтактнаяИнформация.Представление КАК Индекс
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтрагентыКонтактнаяИнформация.Тип = &ТипИндекс";
		
		Запрос.УстановитьПараметр("Ссылка", ДокЗаказ.Контрагент);
		Запрос.УстановитьПараметр("ТипИндекс", Перечисления.ТипыКонтактнойИнформации.ПочтовыйИндекс);		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			КомуИндекс = Выборка.Индекс;
		КонецЦикла;
		
		облБланк.Параметры.КомуИндекс = КомуИндекс;
		
		//
		Если СтрДлина(КомуИндекс) >= 1 Тогда
			облБланк.Параметры.КИ1 = Сред(КомуИндекс,1,1);			
		КонецЕсли;
		Если СтрДлина(КомуИндекс) >= 2 Тогда
			облБланк.Параметры.КИ2 = Сред(КомуИндекс,2,1);			
		КонецЕсли;
		Если СтрДлина(КомуИндекс) >= 3 Тогда
			облБланк.Параметры.КИ3 = Сред(КомуИндекс,3,1);			
		КонецЕсли;
		Если СтрДлина(КомуИндекс) >= 4 Тогда
			облБланк.Параметры.КИ4 = Сред(КомуИндекс,4,1);			
		КонецЕсли;
		Если СтрДлина(КомуИндекс) >= 5 Тогда
			облБланк.Параметры.КИ5 = Сред(КомуИндекс,5,1);			
		КонецЕсли;
		Если СтрДлина(КомуИндекс) >= 6 Тогда
			облБланк.Параметры.КИ6 = Сред(КомуИндекс,6,1);			
		КонецЕсли;
		
		ТД.Вывести(облБланк);		
		//ТД.ВывестиГоризонтальныйРазделительСтраниц();	//не печататть каждый на отдельном	
		
	ИначеЕсли МакетПечати = "ПечатьБланкПочтовыйПеревод" Тогда
		
		Макет = Документы.ЗаказПокупателя.ПолучитьМакет("БланкПочтовыйПеревод");
		
		облБланк = Макет.ПолучитьОбласть("ОбластьБланк");
		
		//Заполнение параметров
		облБланк.Параметры.КомуФИО = Константы.ПечатьФ7ОтКого.Получить();
		
		облБланк.Параметры.КудаАдрес = Константы.ПечатьФ7Адрес.Получить();
				
		Попытка
			
			ПечатьФ7Индекс = Константы.ПечатьФ7Индекс.Получить(); 
			
			облБланк.Параметры.КомуИндекс1 = Сред(ПечатьФ7Индекс, 1, 1);
			облБланк.Параметры.КомуИндекс2 = Сред(ПечатьФ7Индекс, 2, 1);
			облБланк.Параметры.КомуИндекс3 = Сред(ПечатьФ7Индекс, 3, 1);
			облБланк.Параметры.КомуИндекс4 = Сред(ПечатьФ7Индекс, 4, 1);
			облБланк.Параметры.КомуИндекс5 = Сред(ПечатьФ7Индекс, 5, 1);
			облБланк.Параметры.КомуИндекс6 = Сред(ПечатьФ7Индекс, 6, 1);
			
		Исключение
		КонецПопытки;
		
		облБланк.Параметры.ОтКогоФИО = ДокЗаказ.Контрагент.Наименование;
		
		облБланк.Параметры.АдресОтправителя = ДокЗаказ.Контрагент.Наименование;		
		
		нСтрокиАдрес = ДокЗаказ.Контрагент.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес));
		
		Для Каждого стрАдрес Из нСтрокиАдрес Цикл
			
			облБланк.Параметры.АдресОтправителя = стрАдрес.Представление;
			
		КонецЦикла;
		
		Попытка
			
			нСтрокиИндекс = ДокЗаказ.Контрагент.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.ПочтовыйИндекс));
			
			Для Каждого стрИндекс Из нСтрокиИндекс Цикл 
				
				облБланк.Параметры.ИндексАдресОтправителя1 = Сред(стрИндекс.Представление, 1, 1);
				облБланк.Параметры.ИндексАдресОтправителя2 = Сред(стрИндекс.Представление, 2, 1);
				облБланк.Параметры.ИндексАдресОтправителя3 = Сред(стрИндекс.Представление, 3, 1);
				облБланк.Параметры.ИндексАдресОтправителя4 = Сред(стрИндекс.Представление, 4, 1);
				облБланк.Параметры.ИндексАдресОтправителя5 = Сред(стрИндекс.Представление, 5, 1);
				облБланк.Параметры.ИндексАдресОтправителя6 = Сред(стрИндекс.Представление, 6, 1);
				
			КонецЦикла;
			
		Исключение
		КонецПопытки;		
		
		Сумма = ДокЗаказ.СуммаДокумента;
		СуммаРуб = Цел(Сумма);
		СуммаКоп = (Сумма - СуммаРуб) * 100;
		
		облБланк.Параметры.СуммаРуб = СуммаРуб;
		облБланк.Параметры.СуммаКоп = Прав("00" + СуммаКоп, 2);
		
		облБланк.Параметры.СуммаПрописью = ЧислоПрописью(Сумма, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
				
		ТД.Вывести(облБланк);		
		
	КонецЕсли;
	
	Возврат ТД;
	
КонецФункции


///Вспомогательные функции
Функция ПолучитьСтоимостьДоставкиНоменклатуры(НоменклатураДоставка,Период=Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Номенклатура = &СпособДоставки) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	вт.Цена КАК Цена
	|ИЗ
	|	вт КАК вт";
	Запрос.УстановитьПараметр("СпособДоставки", НоменклатураДоставка);
	Запрос.УстановитьПараметр("Дата", ?(Период = Неопределено, ТекущаяДата(), Период));
	Рез = Запрос.Выполнить();
	Выб = Рез.Выбрать();
	Если Выб.Следующий() Тогда 
		СтоимостьДоставки = Выб.Цена;
	Иначе
		СтоимостьДоставки = 0;
	КонецЕсли;
	
	Возврат СтоимостьДоставки;
	
КонецФункции

Функция РазбитьСтроку( Знач РазбиваемаяСтрока, Знач ДлиннаСтроки, МассивСтрок = Неопределено, НачальнаяДлинна = Неопределено )
	
	Если МассивСтрок = Неопределено Тогда
		МассивСтрок = Новый Массив;
		НачальнаяДлинна = ДлиннаСтроки;
	КонецЕсли;
	
	Если СтрДлина( РазбиваемаяСтрока ) > ДлиннаСтроки Тогда
		
		Если Сред( РазбиваемаяСтрока, ДлиннаСтроки, 1 ) = " " Тогда
			МассивСтрок.Добавить( Лев( РазбиваемаяСтрока, ДлиннаСтроки ) );
			ПоискПробела = СокрЛ( Сред( РазбиваемаяСтрока, ДлиннаСтроки ) );
			ДлиннаСтроки = НачальнаяДлинна;
			РазбитьСтроку( ПоискПробела, ДлиннаСтроки, МассивСтрок, НачальнаяДлинна );
		Иначе
			ПоискПробела = Лев( РазбиваемаяСтрока, ДлиннаСтроки );
			ДлинаСловаБольшеОграничения = Истина;
			
			Для Индекс = ?( ДлиннаСтроки = НачальнаяДлинна, 1, ДлиннаСтроки ) По ДлиннаСтроки Цикл
				Если Сред( ПоискПробела, ДлиннаСтроки - Индекс, 1 ) = " " Тогда
					МассивСтрок.Добавить(  СокрЛП( Лев( РазбиваемаяСтрока, ДлиннаСтроки - Индекс ) ) );
					РазбитьСтроку( СокрЛ( Сред( РазбиваемаяСтрока, ДлиннаСтроки - Индекс ) ), ДлиннаСтроки, МассивСтрок, НачальнаяДлинна );
					ДлинаСловаБольшеОграничения = Ложь;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ДлинаСловаБольшеОграничения Тогда
				РазбитьСтроку( РазбиваемаяСтрока, ДлиннаСтроки + 1, МассивСтрок, НачальнаяДлинна );
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		МассивСтрок.Добавить( СокрЛП( РазбиваемаяСтрока ) );
		ДлиннаСтроки = НачальнаяДлинна;
		
	КонецЕсли;
	
	Возврат МассивСтрок;
	
КонецФункции

Процедура ЗарезервироватьТовар(ДокЗаказ, Результат="") Экспорт
	
	Если ДокЗаказ.Дата < Константы.ДатаНачалаУчета.Получить() Тогда 			
		Возврат;		
	КонецЕсли;
	
	//Если необходимо товар зарезервировать и нет резерва
	
	// Выбрать товар который не был зарезервирован и есть на остатках
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Количество КАК Количество,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТоварыПредв
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Количество,
	|	NULL
	|ИЗ
	|	Документ.ЗаказПокупателя.Упаковка КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПредв.Номенклатура КАК Номенклатура,
	|	СУММА(ТоварыПредв.Количество) КАК Количество,
	|	ТоварыПредв.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ТоварыПредв КАК ТоварыПредв
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПредв.Номенклатура,
	|	ТоварыПредв.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыВРезервеОстатки.КоличествоОстаток КАК КоличествоРезерв
	|ПОМЕСТИТЬ втРезервыЗаказа
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						Товары.Номенклатура КАК Номенклатура
	|					ИЗ
	|						Товары КАК Товары)
	|				И ДокументРезерва = &Ссылка
	|				И Склад = &Склад) КАК ТоварыВРезервеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.Количество КАК КоличествоЗаказ,
	|	ЕСТЬNULL(втРезервыЗаказа.КоличествоРезерв, 0) КАК КоличествоРезерв,
	|	Товары.Количество - ЕСТЬNULL(втРезервыЗаказа.КоличествоРезерв, 0) КАК КоличествоЗарезервировать
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервыЗаказа КАК втРезервыЗаказа
	|		ПО Товары.Номенклатура = втРезервыЗаказа.Номенклатура
	|ГДЕ
	|	Товары.Количество - ЕСТЬNULL(втРезервыЗаказа.КоличествоРезерв, 0) > 0";     
	
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", ДокЗаказ.Ссылка);
	Запрос.УстановитьПараметр("Склад", ДокЗаказ.Склад);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		////Резерваировать весь заказ или ничего
		//Если Выборка.Количество() <> ДокЗаказ.Товары.Количество() + ДокЗаказ.Упаковка.Количество() Тогда 
		//	Возврат;	
		//КонецЕсли;
		
		ДокРезервирование = Документы.РезервированиеТоваров.СоздатьДокумент();
		ДокРезервирование.Дата = ТекущаяДата();
		ДокРезервирование.Склад =ДокЗаказ.Склад;
		ДокРезервирование.Автор = ПараметрыСеанса.ТекущийПользователь;
		ДокРезервирование.Комментарий = "Автоматическое резервирование на основании: " + ДокЗаказ.Ссылка;
		ДокРезервирование.ДокументОснование = ДокЗаказ.Ссылка;		
		
		Пока Выборка.Следующий() Цикл
			
			нТовар = ДокРезервирование.Товары.Добавить();
			нТовар.Номенклатура = Выборка.Номенклатура;
			нТовар.Количество = Выборка.КоличествоЗарезервировать;
			нТовар.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;			
			
		КонецЦикла;
		
		Попытка
			ДокРезервирование.Записать(РежимЗаписиДокумента.Проведение);
			Результат = "" + ДокЗаказ + ". Товар был зарезервирован.";
			Сообщить(Результат);
		Исключение
			ОО = ОписаниеОшибки();			
			Результат = "" + ДокЗаказ + ". Товар не был зарезервирован по причине: " + ОО;
			Сообщить(Результат);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СнятьтоварСРезерва(ДокЗаказ, Результат="", Склад = Неопределено) Экспорт
	
	//Если товар по текущему заказу был зарезервирован снять этот резерв
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыВРезервеОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыВРезервеОстатки.КоличествоОстаток КАК КоличествоРезерв,
	|	ТоварыВРезервеОстатки.Склад КАК Склад
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			ДокументРезерва = &Ссылка
	|				И &Склад В (НЕОПРЕДЕЛЕНО, Склад)) КАК ТоварыВРезервеОстатки";     
	Запрос.УстановитьПараметр("Ссылка", ДокЗаказ.Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ДокСнятиеРезерва = Документы.СнятиеТоваровСРезерва.СоздатьДокумент();
		ДокСнятиеРезерва.Дата = ТекущаяДата();
		ДокСнятиеРезерва.Склад = ?(Склад = Неопределено, ДокЗаказ.Склад, Склад);
		ДокСнятиеРезерва.Автор = ПараметрыСеанса.ТекущийПользователь;
		ДокСнятиеРезерва.ДокументОснование = ДокЗаказ.Ссылка;		
		ДокСнятиеРезерва.Комментарий = "Автоматическое снятие резерва на основании: " + ДокЗаказ.Ссылка;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			нТовар = ДокСнятиеРезерва.Товары.Добавить();
			нТовар.Номенклатура = Выборка.Номенклатура;
			нТовар.Количество = Выборка.КоличествоРезерв;
			нТовар.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;			
			
		КонецЦикла;
		
		Попытка
			ДокСнятиеРезерва.Записать(РежимЗаписиДокумента.Проведение);
			Результат = "" + ДокЗаказ + ". Товар был снят с резерва.";
			Сообщить(Результат);
		Исключение
			ОО = ОписаниеОшибки();
			Результат = "" + ДокЗаказ + ". Товар не был снят с резерва по причине: " + ОО;
			Сообщить(Результат);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЗаказыСнедостающимКоличеством() Экспорт
	
	//основа запроса взята из перераспределение изделий
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Ссылка КАК Заказ,
	|	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяТовары.Количество КАК ЗаказКоличество,
	|	0 КАК ЗаказОжидает
	|ПОМЕСТИТЬ втЗаказы
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|ГДЕ
	|	ЗаказПокупателяТовары.Ссылка.Статус.ТоварРезервируется
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Ссылка,
	|	ЗаказПокупателяТовары.Номенклатура,
	|	0,
	|	ЗаказПокупателяТовары.Количество
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|ГДЕ
	|	ЗаказПокупателяТовары.Ссылка.Статус В(&мсСтатусыОжидает)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказы.Номенклатура КАК Номенклатура,
	|	СУММА(втЗаказы.ЗаказКоличество) КАК ЗаказКоличествоВсего,
	|	СУММА(втЗаказы.ЗаказОжидает) КАК ЗаказОжидаетВсего
	|ПОМЕСТИТЬ втНоменклатураЗаказано
	|ИЗ
	|	втЗаказы КАК втЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаказы.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоДоступно
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					втНоменклатураЗаказано.Номенклатура КАК Номенклатура
	|				ИЗ
	|					втНоменклатураЗаказано КАК втНоменклатураЗаказано)) КАК ЗапасыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыВРезервеОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ втРезервыВсего
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					втНоменклатураЗаказано.Номенклатура КАК Номенклатура
	|				ИЗ
	|					втНоменклатураЗаказано КАК втНоменклатураЗаказано)) КАК ТоварыВРезервеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатураЗаказано.Номенклатура КАК Номенклатура,
	|	втНоменклатураЗаказано.ЗаказКоличествоВсего КАК ЗаказКоличествоВсего,
	|	втНоменклатураЗаказано.ЗаказОжидаетВсего КАК ЗаказОжидаетВсего,
	|	ЕСТЬNULL(втОстатки.КоличествоДоступно, 0) - ЕСТЬNULL(втРезервыВсего.КоличествоОстаток, 0) КАК КоличествоДоступно,
	|	ЕСТЬNULL(втРезервыВсего.КоличествоОстаток, 0) КАК КоличествоРезерв
	|ПОМЕСТИТЬ втНоменклатураНехватает
	|ИЗ
	|	втНоменклатураЗаказано КАК втНоменклатураЗаказано
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втНоменклатураЗаказано.Номенклатура = втОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервыВсего КАК втРезервыВсего
	|		ПО втНоменклатураЗаказано.Номенклатура = втРезервыВсего.Номенклатура
	|ГДЕ
	|	(втНоменклатураЗаказано.ЗаказКоличествоВсего > ЕСТЬNULL(втОстатки.КоличествоДоступно, 0)
	|			ИЛИ втНоменклатураЗаказано.ЗаказОжидаетВсего <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказы.Заказ КАК Заказ
	|ИЗ
	|	втЗаказы КАК втЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНоменклатураНехватает КАК втНоменклатураНехватает
	|		ПО втЗаказы.Номенклатура = втНоменклатураНехватает.Номенклатура";
	
	мсСтатусыОжидает = Новый Массив;
	мсСтатусыОжидает.Добавить(Справочники.СтатусыЗаказов.НайтиПоНаименованию("Ожидается поступление товара"));	
	Запрос.УстановитьПараметр("мсСтатусыОжидает", мсСтатусыОжидает);
	
	резЗапроса = Запрос.Выполнить();
	
	Если резЗапроса.Пустой() Тогда 
		
		Возврат Новый Массив;
		
	Иначе
		
		тзРезультат = резЗапроса.Выгрузить();
		
		Возврат тзРезультат.ВыгрузитьКолонку("Заказ");
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПечатьСпискаЗаказов(мсСписокЗаказов) Экспорт
	
	//Выбрать данные для печати по заказам
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Ссылка КАК Ссылка,
	|	ЗаказПокупателяТовары.Ссылка.IDНаСайте КАК IDНаСайте,
	|	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяТовары.Номенклатура.Артикул КАК НоменклатураАртикул,
	|	ЗаказПокупателяТовары.Количество КАК Количество,
	|	ЗаказПокупателяТовары.Ссылка.Склад КАК Склад
	|ПОМЕСТИТЬ втЗаказыПокупателяТовары
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|ГДЕ
	|	ЗаказПокупателяТовары.Ссылка В(&мсСписокЗаказов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗапасыОстатки.Склад КАК Склад
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			&ТекДата,
	|			(Номенклатура, Склад) В
	|				(ВЫБРАТЬ
	|					втЗаказыПокупателяТовары.Номенклатура КАК Номенклатура,
	|					втЗаказыПокупателяТовары.Склад КАК Склад
	|				ИЗ
	|					втЗаказыПокупателяТовары КАК втЗаказыПокупателяТовары
	|				СГРУППИРОВАТЬ ПО
	|					втЗаказыПокупателяТовары.Номенклатура,
	|					втЗаказыПокупателяТовары.Склад)) КАК ЗапасыОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыВРезервеОстатки.Склад КАК Склад,
	|	ТоварыВРезервеОстатки.КоличествоОстаток КАК КоличествоРезерв
	|ПОМЕСТИТЬ втРезервы
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			&ТекДата,
	|			(Номенклатура, Склад) В
	|				(ВЫБРАТЬ
	|					втЗаказыПокупателяТовары.Номенклатура КАК Номенклатура,
	|					втЗаказыПокупателяТовары.Склад КАК Склад
	|				ИЗ
	|					втЗаказыПокупателяТовары КАК втЗаказыПокупателяТовары
	|				СГРУППИРОВАТЬ ПО
	|					втЗаказыПокупателяТовары.Номенклатура,
	|					втЗаказыПокупателяТовары.Склад)) КАК ТоварыВРезервеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыВРезервеОстатки.Склад КАК Склад,
	|	ВЫРАЗИТЬ(ТоварыВРезервеОстатки.ДокументРезерва КАК Документ.ЗаказПокупателя) КАК ДокументРезерва,
	|	ТоварыВРезервеОстатки.КоличествоОстаток КАК КоличествоРезервПоДоку
	|ПОМЕСТИТЬ втРезервыПоТекущемуЗаказу
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			&ТекДата,
	|			(Номенклатура, Склад, ВЫРАЗИТЬ(ДокументРезерва КАК Документ.ЗаказПокупателя)) В
	|				(ВЫБРАТЬ
	|					втЗаказыПокупателяТовары.Номенклатура КАК Номенклатура,
	|					втЗаказыПокупателяТовары.Склад КАК Склад,
	|					втЗаказыПокупателяТовары.Ссылка
	|				ИЗ
	|					втЗаказыПокупателяТовары КАК втЗаказыПокупателяТовары
	|				СГРУППИРОВАТЬ ПО
	|					втЗаказыПокупателяТовары.Номенклатура,
	|					втЗаказыПокупателяТовары.Склад,
	|					втЗаказыПокупателяТовары.Ссылка)) КАК ТоварыВРезервеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказыПокупателяТовары.Ссылка КАК Ссылка, втЗаказыПокупателяТовары.Ссылка.КомментарийПокупателя КАК КомментарийПокупателя,
	|	втЗаказыПокупателяТовары.IDНаСайте КАК IDНаСайте,
	|	втЗаказыПокупателяТовары.Номенклатура КАК Номенклатура,
	|	втЗаказыПокупателяТовары.НоменклатураАртикул КАК НоменклатураАртикул,
	|	втЗаказыПокупателяТовары.Количество КАК Количество,
	|	втЗаказыПокупателяТовары.Склад КАК Склад,
	|	втОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	втРезервы.КоличествоРезерв КАК КоличествоРезерв,
	|	втРезервыПоТекущемуЗаказу.КоличествоРезервПоДоку КАК КоличествоРезервПоДоку,
	|	ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(втРезервы.КоличествоРезерв, 0) КАК КоличествоДоступно,
	|	втЗаказыПокупателяТовары.Ссылка.МетодОплаты КАК МетодОплаты
	|ИЗ
	|	втЗаказыПокупателяТовары КАК втЗаказыПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втЗаказыПокупателяТовары.Номенклатура = втОстатки.Номенклатура
	|			И втЗаказыПокупателяТовары.Склад = втОстатки.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
	|		ПО втЗаказыПокупателяТовары.Номенклатура = втРезервы.Номенклатура
	|			И втЗаказыПокупателяТовары.Склад = втРезервы.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервыПоТекущемуЗаказу КАК втРезервыПоТекущемуЗаказу
	|		ПО втЗаказыПокупателяТовары.Ссылка = втРезервыПоТекущемуЗаказу.ДокументРезерва
	|			И втЗаказыПокупателяТовары.Номенклатура = втРезервыПоТекущемуЗаказу.Номенклатура
	|			И втЗаказыПокупателяТовары.Склад = втРезервыПоТекущемуЗаказу.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	IDНаСайте
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("мсСписокЗаказов", мсСписокЗаказов);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТД = Новый ТабличныйДокумент;
	Макет = Документы.ЗаказПокупателя.ПолучитьМакет("СписокЗаказов");
	
	//Шапка
	облШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	//облШапка.Параметры.IDНаСайте = Формат(ДокЗаказ.IDНаСайте,"ЧГ=0");
	//облШапка.Параметры.ДатаЗаказа = Формат(ДокЗаказ.Дата,"ДЛФ=DD"); //"05" марта 2017 г.		
	ТД.Вывести(облШапка);
	
	облСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
	облПустаяСтрока = Макет.ПолучитьОбласть("ОбластьПустаяСтрока");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл //Заказы
		
		//Вывести пустую строку
		ТД.Вывести(облПустаяСтрока);		
		
		//Товары
		ВыборкаТовары = ВыборкаДетальныеЗаписи.Выбрать();
		ПерваяСтрока = Истина;
		Пока ВыборкаТовары.Следующий() Цикл
			
			Если ПерваяСтрока = Истина Тогда 
				облСтрока.Параметры.НомерЗаказСайт = ВыборкаТовары.IDНаСайте;
				облСтрока.Параметры.СпособОплаты = ВыборкаТовары.МетодОплаты;
				облСтрока.Параметры.КомментарийПокупателя = ВыборкаТовары.КомментарийПокупателя;
			Иначе
				облСтрока.Параметры.НомерЗаказСайт = ""; //Для читабельности номер заказа вывести только в первой строке
				облСтрока.Параметры.СпособОплаты = "";
			КонецЕсли;
			облСтрока.Параметры.Аритикул = ВыборкаТовары.НоменклатураАртикул;
			облСтрока.Параметры.КолВоЗаказ = ВыборкаТовары.Количество;
			облСтрока.Параметры.КолВоСклад = ВыборкаТовары.КоличествоОстаток;
			облСтрока.Параметры.Резерв = ВыборкаТовары.КоличествоРезерв;
			облСтрока.Параметры.РезервПоТекЗаказу = ВыборкаТовары.КоличествоРезервПоДоку;
			облСтрока.Параметры.КолВоДоступно = ВыборкаТовары.КоличествоДоступно;
			
			ТД.Вывести(облСтрока);			
			ПерваяСтрока = Ложь;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТД;	
	
КонецФункции