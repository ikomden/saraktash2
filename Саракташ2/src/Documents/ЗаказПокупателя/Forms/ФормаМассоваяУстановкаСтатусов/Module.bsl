&НаСервере
Процедура НайтиЗаказыНаСервере()
	
	НовыйСтатус = Справочники.СтатусыЗаказов.НайтиПоКоду("000000020"); //Отправлен и выслан идентификатор
	
	СпискоЗаказов.Очистить();
	
	//Обход табличного документа
	Для а = 2 по ВводЗаказы.ВысотаТаблицы Цикл //Пропустить заголовок
		
		//Получить IDНаСайте
		НомерЗаказа = СокрЛП(ВводЗаказы.Область(а,1,а,1).Текст);
		
		Если ПустаяСтрока(НомерЗаказа) Тогда 
			Продолжить;	
		КонецЕсли;
		
		//Преобразовать к числу
		Попытка
			НомерЗаказа = Число(НомерЗаказа);				
		Исключение
			Сообщить("Строка: " + а + ". Ошибка: Номер заказа может содержать только цыфры");
			Продолжить;
		КонецПопытки;
		
		
		//Получить стоимость доставки
		СтоимостьДоставки = СокрЛП(ВводЗаказы.Область(а,3,а,3).Текст);
		
		Попытка
			СтоимостьДоставки = Число(СтоимостьДоставки);				
		Исключение
			Сообщить("Строка: " + а + ". Ошибка: Стоимость доставки может содержать только цыфры");
			Продолжить;
		КонецПопытки;
		
		
		//Получить почтовый идентификатор
		ПочтовыйИдентификатор = СокрЛП(ВводЗаказы.Область(а,2,а,2).Текст);		
		
		
		//Найти заказ
		ЗаказСсылка = НайтиЗаказПоНомеру(НомерЗаказа);
		Если НЕ ЗначениеЗаполнено(ЗаказСсылка) Тогда
			Сообщить("Строка: " + а + ". Ошибка: Заказ с номером """ + НомерЗаказа + """ не найден");			
			Продолжить;			
		КонецЕсли;
		
		
		//Добавить в ТЗ
		нСтрока = СпискоЗаказов.Добавить();
		нСтрока.ССылка = ЗаказСсылка;
		нСтрока.Статус = ЗаказСсылка.Статус;
		нСтрока.IDНаСайте = НомерЗаказа;
		нСтрока.СтоимостьДоставки = ЗаказСсылка.СтоимостьДоставки;
		нСтрока.ИдентификаторОтправки = ЗаказСсылка.ИдентификаторОтправки;
		нСтрока.НовыйСтатус = НовыйСтатус;
		нСтрока.НоваяСтоимостьДоставки = СтоимостьДоставки;
		нСтрока.НовыйИдентификаторОтправки = ПочтовыйИдентификатор;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиЗаказПоНомеру(НомерЗаказа)
	
	Заказ = Неопределено;
	
	Попытка
		НомерЗаказа = Число(СокрЛП(НомерЗаказа));
	Исключение
		Возврат Заказ;	
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.IDНаСайте = &IDНаСайте";
	
	Запрос.УстановитьПараметр("IDНаСайте", НомерЗаказа);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Заказ;
	КонецЦикла;	
	
КонецФункции

&НаКлиенте
Процедура НайтиЗаказы(Команда)
	
	НайтиЗаказыНаСервере();
	
	Элементы.СпискоЗаказов.Видимость = Истина; //Нужно отобразить
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.СпискоЗаказов.Видимость = Ложь; //скрыть для начала
КонецПроцедуры

&НаСервере
Процедура ВнестиИзмененияНаСервере()

	Если СпискоЗаказов.Количество() = 0 Тогда 
		Сообщить("Нет заказов для изменения.");
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из СпискоЗаказов Цикл 
		
		Попытка
			
			ЗаказОбъект = Стр.Ссылка.ПолучитьОбъект();
			ЗаказОбъект.Статус = Стр.НовыйСтатус;
			ЗаказОбъект.СтоимостьДоставки = Стр.НоваяСтоимостьДоставки;
			ЗаказОбъект.ИдентификаторОтправки= Стр.НовыйИдентификаторОтправки ;
			ЗаказОбъект.Записать();
			
			//изменить тек строку
			Стр.СтоимостьДоставки = Стр.НоваяСтоимостьДоставки;
			Стр.ИдентификаторОтправки = Стр.НовыйИдентификаторОтправки;
			Стр.Статус = Стр.НовыйСтатус;
			
		Исключение
			ОО = ОписаниеОшибки();
			Сообщить("" + Стр.Ссылка + ": не был изменен. Возникла ошибка: " + ОО);
			Возврат;
		КонецПопытки;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнестиИзменения(Команда)
	ВнестиИзмененияНаСервере();
	Сообщить("Изменение завершено.");
КонецПроцедуры
