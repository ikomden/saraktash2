&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СписокОбзвона.Параметры.УстановитьЗначениеПараметра("мсСтатусы",ПолучитьНеобходимыеСтатусыДляВывода());
	
	//таймер
	ПодключитьОбработчикОжидания("СообщитьОНовых",5);
	
КонецПроцедуры

Функция ПолучитьНеобходимыеСтатусыДляВывода()
	
	мсСтатусы = Новый Массив;
	мсСтатусы.Добавить(Справочники.СтатусыЗаказов.НайтиПоНаименованию("Новый"));
	мсСтатусы.Добавить(Справочники.СтатусыЗаказов.НайтиПоНаименованию("Ожидает изделия. Позвонить"));
	мсСтатусы.Добавить(Справочники.СтатусыЗаказов.НайтиПоНаименованию("Оплачен"));
	
	Возврат мсСтатусы;
	
КонецФункции

&НаСервере
Процедура ИзменитьСтатусНаСервере(ЗаявкаСсылка,КомандаИмя)
	
	НовыйСтатус = Неопределено;
	Если КомандаИмя = "ИзменитьСтатусВыполнено" Тогда 
		НовыйСтатус = Перечисления.СтатусыЗаявокСФормыОбратнойСвязи.Выполнено;
	ИначеЕсли КомандаИмя = "ИзменитьСтатусОтложено" Тогда 
		НовыйСтатус = Перечисления.СтатусыЗаявокСФормыОбратнойСвязи.Отложено;
	ИначеЕсли КомандаИмя = "ИзменитьСтатусОшибка" Тогда 
		НовыйСтатус = Перечисления.СтатусыЗаявокСФормыОбратнойСвязи.Ошибка;		
	КонецЕсли;
		
	ЗаявкаОбъект = ЗаявкаСсылка.ПолучитьОбъект();
	ЗаявкаОбъект.Статус = НовыйСтатус; 
	ЗаявкаОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатус(Команда)
	
	Если Не ЗначениеЗаполнено(Элементы.СписокДанныеСФормыОС.ТекущаяСтрока) Тогда 
		Сообщить("Выберите строку для изменения");
		Возврат
	КонецЕсли;
	
	ИзменитьСтатусНаСервере(Элементы.СписокДанныеСФормыОС.ТекущаяСтрока, Команда.Имя);
	
	Элементы.СписокДанныеСФормыОС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОНовых()
	
	//Найти новые сообщения или заказы с датой прозвона и сообщить
	Если ЕстьНовые() Тогда 
		ПоказатьОповещениеПользователя("Внимание!",,"Новое сообщение или заказ в списке обзвона.",БиблиотекаКартинок.Справка);		
	КонецЕсли;	
	
КонецПроцедуры

Функция ЕстьНовые()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбратнаяCвязь.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбратнаяCвязь КАК ОбратнаяCвязь
		|ГДЕ
		|	ОбратнаяCвязь.ДатаНаСайте >= &ДатаНаСайте
		|	И ОбратнаяCвязь.Статус = &Статус
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	(ЗаказПокупателя.ВремяПерезвонить между &ВремяПерезвонитьНачало И &ВремяПерезвонитьКонец)";
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыЗаявокСФормыОбратнойСвязи.Новый);	
	Запрос.УстановитьПараметр("ДатаНаСайте", ТекущаяДата() - 60);
	Запрос.УстановитьПараметр("ВремяПерезвонитьНачало", ТекущаяДата() + 60*10); //за десять минут до назначенного времени
	Запрос.УстановитьПараметр("ВремяПерезвонитьКонец", ТекущаяДата() + 60*11);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции