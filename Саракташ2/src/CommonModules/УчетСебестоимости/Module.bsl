Процедура УчестьСебестоимость(Источник,РежимПроведения,Отказ) Экспорт
			
	ТипыРасход = Новый Соответствие;
	ТипыРасход.Вставить(Тип("ДокументОбъект.ЗаказПокупателя"),Истина);
	ТипыРасход.Вставить(Тип("ДокументОбъект.СписаниеТоваров"),Истина);
	ТипыРасход.Вставить(Тип("ДокументОбъект.ПеремещениеТоваров"),Истина);
	ТипыРасход.Вставить(Тип("ДокументОбъект.ВозвратТоваровПоставщику"),Истина);
	ТипыРасход.Вставить(Тип("ДокументОбъект.ИнвентаризацияТоваров"),Истина); 
	
	ТипыПриход = Новый Соответствие;
	ТипыПриход.Вставить(Тип("ДокументОбъект.ПоступлениеТоваров"),Истина);
	ТипыПриход.Вставить(Тип("ДокументОбъект.ПеремещениеТоваров"),Истина);
	ТипыПриход.Вставить(Тип("ДокументОбъект.ВозвратТоваровОтПокупателя"),Истина);	
	
	ТипИсточника = ТипЗнч(Источник);
	ДвиженияОчищеныПриСписании = Ложь;
	Если ТипыРасход[ТипИсточника] = Истина Тогда
		СписатьТовары(Источник,РежимПроведения,Отказ);
		ДвиженияОчищеныПриСписании = Истина;
	КонецЕсли;
	
	Если НЕ Отказ И ТипыПриход[ТипИсточника] = Истина Тогда
		ПринятьТовары(Источник,РежимПроведения,Отказ, ДвиженияОчищеныПриСписании);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПринятьТовары(Источник,РежимПроведения,Отказ, ДвиженияОчищеныПриСписании = Ложь) 
	
	Если НЕ ЯвляетсяРегистраторомСебестоимости(Источник) Тогда
		Отказ = Истина;
		Сообщить(""+Источник.Ссылка+" не является регистратором ""Себестоимость товаров""!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	МетодСписания = РегистрыСведений.ПолитикаСписанияТоваров.ПолучитьПоследнее(Источник.Дата).МетодСписания;
	Если НЕ ЗначениеЗаполнено(МетодСписания) Тогда
		Отказ = Истина;
		Сообщить(""+Источник.Ссылка+": Не указан метод списания товаров!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	ЗаполнятьПартию = (МетодСписания = Перечисления.МетодыСписанияТоваров.ЛИФО ИЛИ МетодСписания = Перечисления.МетодыСписанияТоваров.ФИФО);
	
	Движения = Источник.Движения.СебестоимостьТоваров;
	Движения.Записывать = Истина;  
	
	Если Не ДвиженияОчищеныПриСписании Тогда  		
		Движения.Очистить();
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьРеквизитСумма = (Источник.Метаданные().ТабличныеЧасти["Товары"].Реквизиты.Найти("Сумма")<>Неопределено);
	
	Для Каждого Стр Из Источник.Товары Цикл
		
		Если Стр.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") И Стр.Отклонение <=0 Тогда //Инвентаризация может списывать товар
			Продолжить;
		КонецЕсли;
		
		Движение =  Движения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Источник.Дата;
		Движение.Номенклатура = Стр.Номенклатура;
		Движение.Партия = ?(ЗаполнятьПартию,Источник.Ссылка,Неопределено);		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") Тогда
			Движение.Количество = Стр.Отклонение;
		Иначе
			Движение.Количество = Стр.Количество;
		КонецЕсли;
		Движение.Сумма = ?(ЕстьРеквизитСумма,Стр.Сумма,Стр.Цена);		
		//Движение.Сумма = 1000;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура СписатьТовары(Источник,РежимПроведения,Отказ) 
	
	Если НЕ ЯвляетсяРегистраторомСебестоимости(Источник) Тогда
		Отказ = Истина;
		Сообщить(""+Источник.Ссылка+" не является регистратором ""Себестоимость товаров""!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	МетодСписания = РегистрыСведений.ПолитикаСписанияТоваров.ПолучитьПоследнее(Источник.Дата).МетодСписания;
	Если НЕ ЗначениеЗаполнено(МетодСписания) Тогда
		Отказ = Истина;
		Сообщить(""+Источник.Ссылка+": Не указан метод списания товаров!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	ЗаполнятьПартию = (МетодСписания = Перечисления.МетодыСписанияТоваров.ЛИФО ИЛИ МетодСписания = Перечисления.МетодыСписанияТоваров.ФИФО);
	
	Движения = Источник.Движения.СебестоимостьТоваров;
	Движения.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Источник.Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		Движения.Очистить();
		Движения.БлокироватьДляИзменения = Истина;
	    Движения.Записать();
	КонецЕсли; 
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	Если МетодСписания = Перечисления.МетодыСписанияТоваров.ПоУказаннойСтоимости Тогда
		СписатьТоварыПоУказаннойСтоимости(Источник,РежимПроведения,Отказ,Движения);
		Возврат;
	ИначеЕсли МетодСписания = Перечисления.МетодыСписанияТоваров.ПоСредней Тогда
		СписатьТоварыПоСредней(Источник,РежимПроведения,Отказ,Движения);
	    Возврат;
	КонецЕсли;
	
	// списание по FIFO/LIFO		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тчТовары.Номенклатура,
	|	тчТовары.Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&тчТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура,
	|	СУММА(втТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыФильтр
	|ИЗ
	|	втТовары КАК втТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(втТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	втТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваровОстатки.Номенклатура,
	|	СебестоимостьТоваровОстатки.Партия,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток,
	|	СебестоимостьТоваровОстатки.СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиПартий
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&МоментВремени,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ТоварыФильтр.Номенклатура
	|				ИЗ
	|					ТоварыФильтр)) КАК СебестоимостьТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Количество КАК КоличествоСписать,
	|	ЕСТЬNULL(ОстаткиПартий.Партия, НЕОПРЕДЕЛЕНО) КАК Партия,
	|	ЕСТЬNULL(ОстаткиПартий.КоличествоОстаток, 0) КАК Остаток,
	|	ЕСТЬNULL(ОстаткиПартий.СуммаОстаток, 0) КАК СтоимостьОстатка
	|ИЗ
	|	втТовары КАК втТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|		ПО втТовары.Номенклатура = ОстаткиПартий.Номенклатура
	|ГДЕ
	|	ОстаткиПартий.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиПартий.Партия.МоментВремени
	|ИТОГИ
	|	МИНИМУМ(КоличествоСписать),
	|	СУММА(Остаток),
	|	СУММА(СтоимостьОстатка)
	|ПО
	|	Номенклатура"; 	   		
	
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") Тогда //Инвентаризация может не только списывать товар
		
		ЗапросИнв = Новый Запрос;
		ЗапросИнв.Текст = 
		"ВЫБРАТЬ
		|	тчТовары.Номенклатура КАК Номенклатура,
		|	тчТовары.Количество КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&тчТовары КАК тчТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.Номенклатура КАК Номенклатура,
		|	втТовары.Количество КАК Количество
		|ИЗ
		|	втТовары КАК втТовары
		|ГДЕ
		|	втТовары.Количество <> 0";
		
		ЗапросИнв.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Количество"));
		
		Запрос.УстановитьПараметр("тчТовары", ЗапросИнв.Выполнить().Выгрузить());
		
	Иначе
		Запрос.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Количество"));
	КонецЕсли;		
	
	Запрос.УстановитьПараметр("МоментВремени",Источник.МоментВремени());  
	
	Если МетодСписания = Перечисления.МетодыСписанияТоваров.ЛИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО
		|	ОстаткиПартий.Партия.МоментВремени", "УПОРЯДОЧИТЬ ПО
		|	ОстаткиПартий.Партия.МоментВремени УБЫВ"); 
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
    Пока Выборка.Следующий() Цикл

		ОсталосьСписать = МИН(Выборка.КоличествоСписать, Выборка.Остаток);       		
		ВыборкаПартии = Выборка.Выбрать();
		Пока ВыборкаПартии.Следующий() И ОсталосьСписать > 0 Цикл
			
			Списать = МИН(ОсталосьСписать, ВыборкаПартии.Остаток);
			Себестоимость = Списать / ВыборкаПартии.Остаток * ВыборкаПартии.СтоимостьОстатка;      			
			Движение = Движения.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Источник. Дата;
			Движение.Номенклатура = ВыборкаПартии.Номенклатура;
			Движение.Партия = ВыборкаПартии.Партия;
			Движение.Количество = Списать;
			Движение.Сумма = Себестоимость;   			
			ОсталосьСписать = ОсталосьСписать - Списать;  
			
		КонецЦикла;
    КонецЦикла;  
	
КонецПроцедуры

Процедура СписатьТоварыПоУказаннойСтоимости(Источник,РежимПроведения,Отказ,Движения) 
	
	ЕстьРеквизитЦенаЗакупки = Источник.Метаданные.ТабличныеЧасти.Реквизиты.Найти("ЦенаЗакупки")<>Неопределено; 
	Для Каждого Стр Из Источник.Товары Цикл
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") И Стр.Отклонение >=0 Тогда //Инвентаризация может списывать товар
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Источник. Дата;
		Движение.Номенклатура = Стр.Номенклатура;
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") Тогда
			Движение.Количество = Стр.Отклонение;
		Иначе
			Движение.Количество = Стр.Количество;
		КонецЕсли;
		Движение.Сумма = Стр.Количество*?(ЕстьРеквизитЦенаЗакупки,Стр.ЦенаЗакупки,Стр.Цена);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура _СписатьТоварыПоСредней(Источник,РежимПроведения,Отказ,Движения) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тчТовары.Номенклатура,
	|	тчТовары.Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&тчТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура,
	|	СУММА(втТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыФильтр
	|ИЗ
	|	втТовары КАК втТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(втТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	втТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваровОстатки.Номенклатура,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток,
	|	СебестоимостьТоваровОстатки.СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиПартий
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&МоментВремени,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ТоварыФильтр.Номенклатура
	|				ИЗ
	|					ТоварыФильтр)) КАК СебестоимостьТоваровОстатки
	|ГДЕ
	|	СебестоимостьТоваровОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Количество КАК Количество,
	|	втТовары.Количество * ВЫБОР
	|		КОГДА ОстаткиПартий.КоличествоОстаток = 0
	|			ТОГДА ОстаткиПартий.СуммаОстаток
	|		ИНАЧЕ ОстаткиПартий.СуммаОстаток / ОстаткиПартий.КоличествоОстаток
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	втТовары КАК втТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|		ПО втТовары.Номенклатура = ОстаткиПартий.Номенклатура";		
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") Тогда //Инвентаризация может не только списывать товар
		
		ЗапросИнв = Новый Запрос;
		ЗапросИнв.Текст = 
		"ВЫБРАТЬ
		|	тчТовары.Номенклатура КАК Номенклатура,
		|	тчТовары.Отклонение КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&тчТовары КАК тчТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.Номенклатура КАК Номенклатура,
		|	втТовары.Количество * -1 КАК Количество
		|ИЗ
		|	втТовары КАК втТовары
		|ГДЕ
		|	втТовары.Количество <> 0";
		
		ЗапросИнв.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Отклонение"));
		
		Запрос.УстановитьПараметр("тчТовары", ЗапросИнв.Выполнить().Выгрузить());
		
	Иначе
		Запрос.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Количество"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментВремени",Источник.МоментВремени());
	РезультатЗапроса = Запрос.Выполнить(); 	
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Источник. Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Количество = Выборка.Количество;
		Движение.Сумма = Выборка.Сумма;
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ЯвляетсяРегистраторомСебестоимости(Источник)
	
	Возврат Метаданные.РегистрыНакопления.СебестоимостьТоваров.СтандартныеРеквизиты.Регистратор.Тип.СодержитТип(ТипЗнч(Источник.Ссылка));
	
КонецФункции

Процедура ПерепровестиДокументыОтДаты(Дата, ТолькоСебестоимость = Ложь) Экспорт
	
	ТекстЗапроса = ""; 	
	ТипыДокументов = Метаданные.РегистрыНакопления.СебестоимостьТоваров.СтандартныеРеквизиты.Регистратор.Тип.Типы();
	Для Каждого ТипДокумента Из ТипыДокументов Цикл
		ДокументСсылка = Новый(ТипДокумента);
    	ТекТекст = ?(ПустаяСтрока(ТекстЗапроса),"","
		|ОБЪЕДИНИТЬ ВСЕ
		|")+"
		|ВЫБРАТЬ
		|	Доки.Ссылка,
		|	Доки.МоментВремени
		|"+?(ПустаяСтрока(ТекстЗапроса),"ПОМЕСТИТЬ вт
		|","")+"ИЗ
		|	Документ."+ДокументСсылка.Метаданные().Имя+" КАК Доки
		|ГДЕ
		|	Доки.Проведен
		|	И Доки.Дата >= &Дата";
		ТекстЗапроса = ТекстЗапроса + ТекТекст;
	КонецЦикла;
	
	ТекстЗапроса = СокрЛП(ТекстЗапроса)+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Ссылка,
	|	вт.МоментВремени КАК МоментВремени
	|ИЗ
	|	вт КАК вт
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени";
	 
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Всего = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		Источник = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ТолькоСебестоимость Тогда
			Источник.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			НачатьТранзакцию();
			Отказ = Ложь;
			УчестьСебестоимость(Источник, РежимПроведенияДокумента.Неоперативный, Отказ);
			Если ТранзакцияАктивна() Тогда
				ЗафиксироватьТранзакцию();
			КонецЕсли;
		КонецЕсли; 		
	КонецЦикла; 
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Обработано документов: "+Всего;
	Сообщение.Сообщить();
		
КонецПроцедуры

Процедура СписатьТоварыПоСредней(Источник,РежимПроведения,Отказ,Движения) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тчТовары.Номенклатура КАК Номенклатура,
	|	тчТовары.Количество КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&тчТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	СУММА(втТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыФильтр
	|ИЗ
	|	втТовары КАК втТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(втТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	втТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваровОстатки.Номенклатура КАК Номенклатура,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	СебестоимостьТоваровОстатки.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиПартий
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&МоментВремени,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ТоварыФильтр.Номенклатура
	|				ИЗ
	|					ТоварыФильтр)) КАК СебестоимостьТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура КАК Номенклатура,
	|	втТовары.Количество КАК Количество,
	|	ЕСТЬNULL(ОстаткиПартий.КоличествоОстаток, 0) КАК Остаток,
	|	втТовары.Количество * ВЫБОР
	|		КОГДА ЕСТЬNULL(ОстаткиПартий.КоличествоОстаток, 0) = 0
	|			ТОГДА ЕСТЬNULL(ОстаткиПартий.СуммаОстаток, 0)
	|		ИНАЧЕ ЕСТЬNULL(ОстаткиПартий.СуммаОстаток, 0) / ОстаткиПартий.КоличествоОстаток
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|		ПО втТовары.Номенклатура = ОстаткиПартий.Номенклатура";		
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ИнвентаризацияТоваров") Тогда //Инвентаризация может не только списывать товар
		
		ЗапросИнв = Новый Запрос;
		ЗапросИнв.Текст = 
		"ВЫБРАТЬ
		|	тчТовары.Номенклатура КАК Номенклатура,
		|	тчТовары.Отклонение КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&тчТовары КАК тчТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.Номенклатура КАК Номенклатура,
		|	втТовары.Количество * -1 КАК Количество
		|ИЗ
		|	втТовары КАК втТовары
		|ГДЕ
		|	втТовары.Количество <> 0";
		
		ЗапросИнв.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Отклонение"));
		
		Запрос.УстановитьПараметр("тчТовары", ЗапросИнв.Выполнить().Выгрузить());
		
	Иначе
		Запрос.УстановитьПараметр("тчТовары",Источник.Товары.Выгрузить(,"Номенклатура,Количество"));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментВремени",Источник.МоментВремени());
	РезультатЗапроса = Запрос.Выполнить(); 	
	Выборка = РезультатЗапроса.Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество > Выборка.Остаток Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "ВНИМАНИЕ! СЕБЕСТОИМОСТЬ! "+Выборка.Номенклатура+" / "+Источник.Ссылка+Символы.ПС+"К списанию: "+Выборка.Количество+"; На остатке: "+Выборка.Остаток+";";
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Источник. Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Количество = Выборка.Количество;
		Движение.Сумма = Выборка.Сумма;
		
	КонецЦикла;	
	
КонецПроцедуры
