
Процедура ЗаполнитьДополнительныеРеквизиты(Знач Ссылка,Знач Форма,Знач Расположение,АдресКэша, тзЗначенияНовогоОбъекта=Неопределено) Экспорт
	
	ТаблицаДопРеквизитов = ТаблицаДополнительныхРеквизитов(Ссылка);
	
	Если НЕ ПустаяСтрока(АдресКэша) Тогда
		КэшДопРеквизитов = ПолучитьИзВременногоХранилища(АдресКэша);
	Иначе
		КэшДопРеквизитов = Новый Структура; 
	КонецЕсли;	  
		
	// {удаление добавленных ранее доп. реквизитов и элементов
	Если КэшДопРеквизитов.Свойство("ДобавленныеРеквизиты") Тогда	
		
		Форма.ИзменитьРеквизиты(,КэшДопРеквизитов.ДобавленныеРеквизиты);
		Для Каждого Эл Из КэшДопРеквизитов.ДобавленныеРеквизиты Цикл
			Форма.Элементы.Удалить(Форма.Элементы[Эл]);
		КонецЦикла;
		
	КонецЕсли; 
	// удаление добавленных ранее доп. реквизитов и элементов}
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавленныеРеквизиты = Новый Массив;
	КлючиСвойств = Новый Соответствие;
	ЗначенияСвойств = Новый Соответствие;
	Для Каждого Стр Из ТаблицаДопРеквизитов Цикл			
		
		Ключ = КлючИзСсылки(Стр.Ссылка);
		Стр.Ключ = Ключ;
		НовыйРеквизит = Новый РеквизитФормы(Ключ,Стр.ТипЗначения,"",,Истина);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ДобавленныеРеквизиты.Добавить(Ключ); 
		КлючиСвойств.Вставить(Ключ,Стр.Ссылка);
		ЗначенияСвойств.Вставить(Стр.Ссылка,Стр.ЗначениеПоля);
		
	КонецЦикла; 	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
	КэшДопРеквизитов.Вставить("ДобавленныеРеквизиты",ДобавленныеРеквизиты);
	КэшДопРеквизитов.Вставить("КлючиСвойств",КлючиСвойств); 
	КэшДопРеквизитов.Вставить("ЗначенияСвойств",ЗначенияСвойств);   
	
	Для Каждого Стр Из ТаблицаДопРеквизитов Цикл 		
		
		НовыйЭлемент = Форма.Элементы.Добавить(Стр.Ключ,Тип("ПолеФормы"),Расположение); 
		НовыйЭлемент.ПутьКДанным = Стр.Ключ;
		НовыйЭлемент.Заголовок = Стр.Наименование;
		НовыйЭлемент.ОграничениеТипа = Стр.ТипЗначения;
		
		Если Стр.ТипЗначения.Типы().Количество() > 1 Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		Иначе
			Если Стр.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			Иначе
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;				
			КонецЕсли;
		КонецЕсли;	 
		
		Если Стр.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДополнительныеЗначенияРеквизитов")) Тогда			
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Стр.Ссылка);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			НовыйЭлемент.ПараметрыВыбора = НовыеПараметры;
			//НовыйЭлемент.БыстрыйВыбор = Истина; 
			НовыйЭлемент.ВысотаСпискаВыбора = 5; 
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Стр.ЗначениеПоля) Тогда
			Форма[Стр.Ключ] = Стр.ЗначениеПоля;
		КонецЕсли;
		
		Если тзЗначенияНовогоОбъекта <> Неопределено Тогда	//Когда создается новый объект и необходимо заполнить свойства то передаем ТЗ с нужными значениями и запоняем с-ва тут
			
			мсСтроки = тзЗначенияНовогоОбъекта.НайтиСтроки(Новый Структура("Свойство", Стр.Ссылка));
			Если мсСтроки.Количество() > 0 Тогда
				
				Форма[Стр.Ключ] = мсСтроки[0].Значение;
				
			КонецЕсли;			
			
		КонецЕсли;
		
		НовыйЭлемент.УстановитьДействие("ПриИзменении","ДополнительныйРеквизитПриИзменении"); 		
		НовыйЭлемент.РастягиватьПоГоризонтали=Ложь;
		НовыйЭлемент.Ширина = 25;
								
	КонецЦикла;
	
	АдресКэша = ПоместитьВоВременноеХранилище(КэшДопРеквизитов,Форма.УникальныйИдентификатор);
	
КонецПроцедуры

Функция КлючИзСсылки(Ссылка)
	
	Ключ = Строка(Ссылка.УникальныйИдентификатор());
	Ключ = СтрЗаменить(Ключ,"-","_");
	Возврат "др"+Ключ;
	
КонецФункции

Процедура ПриИзмененииДополнительногоРеквизита(Знач Ключ,Знач НовоеЗначение,Знач АдресКэша) Экспорт
	
	КэшДопРеквизитов = ПолучитьИзВременногоХранилища(АдресКэша);
	КэшДопРеквизитов.ЗначенияСвойств[КэшДопРеквизитов.КлючиСвойств[Ключ]] = НовоеЗначение;
	ПоместитьВоВременноеХранилище(КэшДопРеквизитов,АдресКэша);		
	
КонецПроцедуры

Функция ТаблицаДополнительныхРеквизитов(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ПОМЕСТИТЬ ЗначенияПолей
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоКатегориям.Категория
	|ПОМЕСТИТЬ Категории
	|ИЗ
	|	РегистрСведений.ТоварыПоКатегориям КАК ТоварыПоКатегориям
	|ГДЕ
	|	ТоварыПоКатегориям.Номенклатура = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДопРеквизиты
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И НЕ ДополнительныеРеквизиты.ТолькоДляКатегорий
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыКатегории.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизиты.Категории КАК ДополнительныеРеквизитыКатегории
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Категории КАК Категории
	|		ПО ДополнительныеРеквизитыКатегории.Категория = Категории.Категория
	|			И (НЕ ДополнительныеРеквизитыКатегории.Ссылка.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРеквизиты.Ссылка КАК Ссылка,
	|	ДопРеквизиты.Ссылка.ТипЗначения КАК ТипЗначения,
	|	ДопРеквизиты.Ссылка.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ДопРеквизиты.Ссылка.Наименование КАК Наименование,
	|	ЕСТЬNULL(ЗначенияПолей.Значение, НЕОПРЕДЕЛЕНО) КАК ЗначениеПоля,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(255)) КАК Ключ
	|ИЗ
	|	ДопРеквизиты КАК ДопРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПолей КАК ЗначенияПолей
	|		ПО ДопРеквизиты.Ссылка = ЗначенияПолей.Свойство где выбор когда &ИспользоватьмсОграничение = истина тогда ДопРеквизиты.Ссылка в(&мсОграничение) иначе истина конец 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	мсОграничение = Новый Массив;
	
	//Для оптовых товаров
	ГруппаОпт = Справочники.Номенклатура.НайтиПоКоду("000010000");	//Опт
	Если Ссылка.ЭтоГруппа И (Ссылка = ГруппаОпт Или Ссылка.Родитель = ГруппаОпт Или Ссылка.Родитель.Родитель = ГруппаОпт Или Ссылка.Родитель.Родитель.Родитель = ГруппаОпт) Тогда
		мсОграничение.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000004"));	//Состав
	КонецЕсли;
	
	Запрос.УстановитьПараметр("мсОграничение", мсОграничение);
	Запрос.УстановитьПараметр("ИспользоватьмсОграничение", мсОграничение.Количество() > 0);
	
	ТаблицаДопРеквизитов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДопРеквизитов;
	
КонецФункции

Процедура ЗаписатьДополнительныеРеквизиты(Объект,АдресКэша) Экспорт
	
	КэшДопРеквизитов = ПолучитьИзВременногоХранилища(АдресКэша);
	Объект.ДополнительныеРеквизиты.Очистить();
	Для Каждого КлючЗначение Из КэшДопРеквизитов.ЗначенияСвойств Цикл
		нс = Объект.ДополнительныеРеквизиты.Добавить();
		нс.Свойство = КлючЗначение.Ключ;
		нс.Значение = КлючЗначение.Значение;
	КонецЦикла;
	
КонецПроцедуры

Функция СписокВсехДополнительныхРеквизитов() Экспорт
	
	Список = Новый СписокЗначений;
	Выборка = ПланыВидовХарактеристик.ДополнительныеРеквизиты.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		Список.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Список;
	
КонецФункции