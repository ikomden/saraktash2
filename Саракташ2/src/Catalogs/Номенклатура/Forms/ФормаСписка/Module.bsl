
&НаКлиенте
Процедура ПоказатьОстаткиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказыватьОстатки = НЕ ПоказыватьОстатки;
	ЗаполнитьНаличие();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗначения();
	ОбновитьСписокТоваров();
	ЗаполнитьЦены();
	
	//ЗаполнитьПоляПоиска();	
	//ЗаполнитьДополнительныеРеквизиты();	
	Список.Параметры.УстановитьЗначениеПараметра("ВключенПоиск",Ложь); 
	Список.Параметры.УстановитьЗначениеПараметра("Найденные",Новый СписокЗначений);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизиты()
	
	//НастройкиДопПолей = Новый Структура;
	//
	//ДопПоля = Новый Соответствие;
	//Выборка = ПланыВидовХарактеристик.ДополнительныеРеквизиты.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если Выборка.ПометкаУдаления Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	Настройка = Новый Структура;
	//	Настройка.Вставить("Тип",Выборка.ТипЗначения);
	//	ДопПоля.Вставить(Выборка.Ссылка,Настройка);		
	//КонецЦикла;
	//
	//ЗаполнитьПоляПоиска(); 
	//СписокВыбора = Элементы.ПолеПоиска.СписокВыбора;
	//Для Каждого КлЗн Из ДопПоля Цикл
	//	СписокВыбора.Добавить(КлЗн.Ключ,Строка(КлЗн.Ключ));
	//КонецЦикла;
	//
	//АдресКэшаДопРеквизитов = ПоместитьВоВременноеХранилище(ДопПоля,УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляПоиска() 
		
	//СписокВыбора = Элементы.ПолеПоиска.СписокВыбора;
	//СписокВыбора.Очистить();
	//СписокВыбора.Добавить("Код","Код");
	//СписокВыбора.Добавить("Артикул","Артикул");
	//СписокВыбора.Добавить("Наименование","Наименование");
	//СписокВыбора.Добавить("IDНаСайте","ID на сайте");
	//СписокВыбора.Добавить("ВидНоменклатуры","Вид номенклатуры");
	//СписокВыбора.Добавить("ВыгружатьНаСайт","Выгружать на сайт"); 
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеПозиции()
	
	ЗаполнитьНаличие();
	ЗаполнитьЦены();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаличие()
	
	тз = ДанныеФормыВЗначение(Остатки,Тип("ТаблицаЗначений"));
	тз.Очистить();
	Элементы.Остатки.Видимость = ПоказыватьОстатки;    
	
	Если ПоказыватьОстатки Тогда 		 
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Склад,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|	0 КАК Резерв
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	РегистрНакопления.Запасы.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыНаСкладахОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыВРезервеОстатки.Склад,
		|	0,
		|	ТоварыВРезервеОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыВРезерве.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыВРезервеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Склад КАК Склад,
		|	СУММА(вт.Остаток) КАК Остаток,
		|	СУММА(вт.Резерв) КАК Резерв,
		|	СУММА(вт.Остаток) - СУММА(вт.Резерв) КАК Свободно
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад";
		Запрос.УстановитьПараметр("Номенклатура",ТекущаяПозиция);
		тз = Запрос.Выполнить().Выгрузить(); 
	КонецЕсли;
	
	ЗначениеВДанныеФормы(тз,Остатки);		
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦены()
	
	Элементы.ТипЦен1.Видимость = ПоказыватьЦены;
	Элементы.ТипЦен2.Видимость = ПоказыватьЦены;
	Элементы.Цена1.Видимость = ПоказыватьЦены И ЗначениеЗаполнено(ТипЦен1);
	Элементы.Цена2.Видимость = ПоказыватьЦены И ЗначениеЗаполнено(ТипЦен2);
	
	Если Элементы.Цена1.Видимость Тогда
		Элементы.Цена1.Заголовок = Строка(ТипЦен1);
	КонецЕсли;
	Если Элементы.Цена2.Видимость Тогда
		Элементы.Цена2.Заголовок = Строка(ТипЦен2);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен1",ТипЦен1);
	Список.Параметры.УстановитьЗначениеПараметра("ТипЦен2",ТипЦен2);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначения()
	
	ПросмотрПоКатегориям = Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокТоваров()
	
	Элементы.СписокКатегорий.Видимость = ПросмотрПоКатегориям;
	Список.Параметры.УстановитьЗначениеПараметра("ПросмотрПоКатегориям",ПросмотрПоКатегориям);
	Список.Параметры.УстановитьЗначениеПараметра("Категория",?(ПросмотрПоКатегориям,Элементы.СписокКатегорий.ТекущаяСтрока,Неопределено));
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПоКатегориямПриИзменении(Элемент)
	
	ОбновитьСписокТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКатегорийПриАктивизацииСтроки(Элемент)
	
	ОбновитьСписокТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяПозиция = ТекСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяПозиция = ТекСтрока;
	ОбновитьДанныеПозиции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНаличиеПриИзменении(Элемент)
	
	ЗаполнитьНаличие();

КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЦеныПриИзменении(Элемент)
	
	ЗаполнитьЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЦеныНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказыватьЦены = НЕ ПоказыватьЦены;
	ЗаполнитьЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦен1ПриИзменении(Элемент)
	
	ЗаполнитьЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЦен2ПриИзменении(Элемент)
	
	ЗаполнитьЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаПриИзменении(Элемент)
	
	УстановитьТипЗначенияПоиска();		
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипЗначенияПоиска()
	
	//Если ПолеПоиска = "Код" Тогда
		
			  
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокПолей = Новый СписокЗначений;
	ДополнительныеПараметры = Новый Структура;
	ПолучитьПоляПоиска(СписокПолей,ДополнительныеПараметры);
	Оповещение = Новый ОписаниеОповещения("ВыборПоляПоискаПродолжение",ЭтаФорма,ДополнительныеПараметры);
	ПоказатьВыборИзМеню(Оповещение,СписокПолей,Элемент);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПоляПоиска(СписокПолей,ДополнительныеПараметры)
	
	СписокПолей.Добавить("Код","Код");
	СписокПолей.Добавить("Артикул","Артикул");
	СписокПолей.Добавить("Наименование","Наименование");
	СписокПолей.Добавить("IDНаСайте","ID на сайте");
	СписокПолей.Добавить("ВидНоменклатуры","Вид номенклатуры");
	СписокПолей.Добавить("ВыгружатьНаСайт","Выгружать на сайт");
	
	мд = Метаданные.Справочники.Номенклатура;
	ТипыПолей = Новый Соответствие;
	ТипыПолей.Вставить("Код",мд.СтандартныеРеквизиты.Код.Тип);
	ТипыПолей.Вставить("Артикул",мд.Реквизиты.Артикул.Тип);
	ТипыПолей.Вставить("Наименование",мд.СтандартныеРеквизиты.Наименование.Тип);
	ТипыПолей.Вставить("IDНаСайте",мд.Реквизиты.IDНаСайте.Тип);
	ТипыПолей.Вставить("ВидНоменклатуры",мд.Реквизиты.ВидНоменклатуры.Тип);
	ТипыПолей.Вставить("ВыгружатьНаСайт",мд.Реквизиты.ВыгружатьНаСайт.Тип); 
	
	Выборка = ПланыВидовХарактеристик.ДополнительныеРеквизиты.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		СписокПолей.Добавить(Выборка.Ссылка,Выборка.Наименование);
		ТипыПолей.Вставить(Выборка.Ссылка,Выборка.ТипЗначения);
	КонецЦикла; 
	
	ДополнительныеПараметры.Вставить("ТипыПолей",ТипыПолей);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПоляПоискаПродолжение(ВыбранныйЭлемент,ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеПоиска = ВыбранныйЭлемент.Значение;
	ЗначениеПоиска = Неопределено;
	Элементы.ЗначениеПоиска.ОграничениеТипа = ДополнительныеПараметры.ТипыПолей[ВыбранныйЭлемент.Значение];
	Если ТипЗнч(ВыбранныйЭлемент.Значение) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизиты") Тогда
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец",ПолеПоиска);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ЗначениеПоиска.ПараметрыВыбора = НовыеПараметры;
	Иначе
		НовыйМассив = Новый Массив;
		Элементы.ЗначениеПоиска.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	КонецЕсли;		
	ПоискПоДопПолям();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоискаПриИзменении(Элемент)
	
	ПоискПоДопПолям();	
	
КонецПроцедуры

&НаСервере
Процедура ПоискПоДопПолям()
	
	Найденные = Новый СписокЗначений; 
	Если ЗначениеЗаполнено(ЗначениеПоиска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|		ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
		|			И (НоменклатураДополнительныеРеквизиты.Свойство = &Свойство)";
		Если ТипЗнч(ПолеПоиска) = Тип("Строка") Тогда
			Запрос.Текст = Запрос.Текст + "
			|ГДЕ
			|	Номенклатура."+ПолеПоиска+" = &ЗначениеПоиска";
			Запрос.УстановитьПараметр("Свойство",Неопределено);		
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|ГДЕ
			|	НоменклатураДополнительныеРеквизиты.Значение = &ЗначениеПоиска";
			Запрос.УстановитьПараметр("Свойство",ПолеПоиска);
		КонецЕсли;
		Запрос.УстановитьПараметр("ЗначениеПоиска",ЗначениеПоиска);
		
		Рез = Запрос.Выполнить().Выгрузить();
		Список.Параметры.УстановитьЗначениеПараметра("ВключенПоиск",Истина);
		Найденные.ЗагрузитьЗначения(Рез.ВыгрузитьКолонку("Ссылка"));
		Список.Параметры.УстановитьЗначениеПараметра("Найденные",Найденные);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ВключенПоиск",Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("Найденные",Найденные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ЗначениеПоиска = Неопределено;
	ПоискПоДопПолям();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИспользованиеСерийныхНомеровНаСервере(МассивСсылок)
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		ОбъектСсылка = Ссылка.ПолучитьОбъект();
		Если ОбъектСсылка.ИспользоватьСерийныеНомера Тогда
			Продолжить;
		КонецЕсли;
		ОбъектСсылка.ИспользоватьСерийныеНомера = Истина;
		ОбъектСсылка.Записать();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Установлено для " + ОбъектСсылка.Наименование;
		Сообщение.Сообщить();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИспользованиеСерийныхНомеров(Команда)
	
	МассивСсылок = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивСсылок.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	
	УстановитьИспользованиеСерийныхНомеровНаСервере(МассивСсылок);
	
КонецПроцедуры
