
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	
	//Галочка Опт
	Если ЭтаФорма.Параметры.Ключ.Пустая() Тогда
		
		Объект.ОптовыйТовар = Объект.Родитель = Справочники.Номенклатура.Опт Или
		Объект.Родитель.Родитель = Справочники.Номенклатура.Опт Или
		Объект.Родитель.Родитель = Справочники.Номенклатура.Опт;
		
		Если Объект.ОптовыйТовар Тогда 
			
			//Заполнить Состав
			//Состав родителя
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
			|ИЗ
			|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
			|ГДЕ
			|	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
			|	И НоменклатураДополнительныеРеквизиты.Свойство = &Свойство";
			
			Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000004");
			
			Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000004"));	//Состав
			Запрос.УстановитьПараметр("Ссылка", Объект.Родитель);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если Не РезультатЗапроса.Пустой() Тогда 
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				ВыборкаДетальныеЗаписи.Следующий();
				
				Объект.ДополнительныеРеквизиты.Очистить();
				
				нСтрока = Объект.ДополнительныеРеквизиты.Добавить();
				нСтрока.Свойство = Свойство; 
				нСтрока.Значение = ВыборкаДетальныеЗаписи.Значение;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеДопРеквизитами.ЗаполнитьДополнительныеРеквизиты(Параметры.Ключ,ЭтаФорма,Элементы.ГруппаДополнительно,АдресКэшаДопРеквизитов, Объект.ДополнительныеРеквизиты.Выгрузить());
	ЗаполнитьКатегории(); 	
	ОбновитьИзображения();
	ОбновитьЦеныЗакупки();
	ОбновитьЦеныПродажи();
	ОбновитьЦеныЗаРаботу();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныЗакупки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныЗакупкиСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ЦеныЗакупки.СрезПоследних(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Контрагент = &Контрагент) КАК ЦеныЗакупкиСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныЗакупкиСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныЗакупки.СрезПоследних(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Контрагент = &ПустойКонтрагент) КАК ЦеныЗакупкиСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	вт.Цена КАК Цена
	|ИЗ
	|	вт КАК вт";
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Запрос.УстановитьПараметр("Контрагент", Объект.ОсновнойПоставщик);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Рез = Запрос.Выполнить();
	Выб = Рез.Выбрать();
	Если Выб.Следующий() Тогда 
		ЦенаЗакупки = Выб.Цена;
	Иначе
		ЦенаЗакупки = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныПродажи()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	вт.Цена КАК Цена
	|ИЗ
	|	вт КАК вт";
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Рез = Запрос.Выполнить();
	Выб = Рез.Выбрать();
	Если Выб.Следующий() Тогда 
		ЦенаПродажи = Выб.Цена;
	Иначе
		ЦенаПродажи = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныЗаРаботу()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			Номенклатура = &Номенклатура
	|				И ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ЦенаЗаРаботу)) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	вт.Цена КАК Цена
	|ИЗ
	|	вт КАК вт";
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Рез = Запрос.Выполнить();
	Выб = Рез.Выбрать();
	Если Выб.Следующий() Тогда 
		ЦенаЗаРаботу = Выб.Цена;
	Иначе
		ЦенаЗаРаботу = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	ВсегоДополнительных = Объект.ДополнительныеПоставщики.Количество();
	ЕстьОсновной = ЗначениеЗаполнено(Объект.ОсновнойПоставщик);
	Элементы.ДобавитьДополнительногоПоставщика.Видимость = Не ВсегоДополнительных И ЕстьОсновной;
	Элементы.ГруппаДополнительныеПоставщики.Видимость = ВсегоДополнительных И ЕстьОсновной;
	
	ЭтаФорма.Элементы.ГруппаПохожиеТовары.Видимость = Ложь;
	
	//Оптовый товар
	Если Объект.ОптовыйТовар Тогда 
		
		мсКатегорииКатегория = Новый Массив;
		мсКатегорииКатегория.Добавить(ПолучитьКатегориюПоКоду("000000003"));	//Производство
		мсКатегорииКатегория.Добавить(ПолучитьКатегориюПоКоду("000000009"));	//Размер
		мсКатегорииКатегория.Добавить(ПолучитьКатегориюПоКоду("000000002"));	//Цвет
		
		Элементы.Категории.ОтборСтрок = Новый ФиксированнаяСтруктура("Категория", мсКатегорииКатегория);
		
		ЭтаФорма.Элементы.ГруппаПохожиеТовары.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКатегориюПоКоду(КодКатегории) 
	
	Возврат ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду(КодКатегории);	
	
КонецФункции

&НаСервере
Процедура ОбновитьИзображения(Текущее = Неопределено)
	
	тзИзображения = ДанныеФормыВЗначение(Изображения,Тип("ТаблицаЗначений"));
	тзИзображения.Очистить();
	АдресТекущегоИзображения = "";
	ИндексТекущего = -1;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Изображения.Ссылка
	|ИЗ
	|	Справочник.Изображения КАК Изображения
	|ГДЕ
	|	НЕ Изображения.ПометкаУдаления
	|	И Изображения.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Изображения.Код";
	Запрос.УстановитьПараметр("Владелец",Параметры.Ключ);
	Рез = Запрос.Выполнить().Выгрузить();	
	Для Каждого Стр Из Рез Цикл
		нс = тзИзображения.Добавить();
		нс.Ссылка = Стр.Ссылка;
		нс.Адрес = ПолучитьНавигационнуюСсылку(Стр.Ссылка,"Хранилище");
		Если АдресТекущегоИзображения = ""
				И (Текущее = Неопределено ИЛИ Текущее = Стр.Ссылка) Тогда
			АдресТекущегоИзображения = нс.Адрес;
			ИндексТекущего = тзИзображения.Индекс(нс);
		КонецЕсли;
	КонецЦикла;    	
	ЗначениеВДанныеФормы(тзИзображения,Изображения);
	
	КоличествоИзображений = тзИзображения.Количество();   		
	Элементы.ПредыдущееИзображение.Доступность = ИндексТекущего > 0;
	Элементы.СледующееИзображение.Доступность = (КоличествоИзображений>1 И ИндексТекущего<(КоличествоИзображений-1));
	Элементы.УдалитьИзображение.Доступность = КоличествоИзображений>0; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКатегории()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КатегорииТоваров.Ссылка,
	|	КатегорииТоваров.Наименование
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	Справочник.КатегорииТоваров КАК КатегорииТоваров
	|ГДЕ
	|	НЕ КатегорииТоваров.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоКатегориям.Категория
	|ПОМЕСТИТЬ КатегорииТовара
	|ИЗ
	|	РегистрСведений.ТоварыПоКатегориям КАК ТоварыПоКатегориям
	|ГДЕ
	|	ТоварыПоКатегориям.Номенклатура = &Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Ссылка КАК Категория,
	|	ВЫБОР
	|		КОГДА КатегорииТовара.Категория ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Отметка
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ КатегорииТовара КАК КатегорииТовара
	|		ПО вт.Ссылка = КатегорииТовара.Категория
	|
	|УПОРЯДОЧИТЬ ПО
	|	вт.Наименование";
	Запрос.УстановитьПараметр("Номенклатура",Параметры.Ключ);
	рзКатегории = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВДанныеФормы(рзКатегории,Категории);	
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорииОтметкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Категории.ТекущиеДанные;
	Если Модифицированность Тогда
		
		ПараметрыДействия = Новый Структура("Категория,Отметка",ТекДанные.Категория,ТекДанные.Отметка);   
		Оповещение = Новый ОписаниеОповещения("ЗаписьОбъектаПродолжение",ЭтаФорма,ПараметрыДействия);
		ПоказатьВопрос(Оповещение,"Объект не записан! Записать?",РежимДиалогаВопрос.ОКОтмена,35,КодВозвратаДиалога.Отмена,"Внимание!",КодВозвратаДиалога.Отмена);
		
	Иначе
		
		ЗаписатьПринадлежностьККатегории(ТекДанные.Категория,ТекДанные.Отметка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьОбъектаПродолжение(РезультатВопроса,ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		
		ЭтаФорма.Записать();
		Если ДополнительныеПараметры.Свойство("Категория") И ДополнительныеПараметры.Свойство("Отметка") Тогда
			ЗаписатьПринадлежностьККатегории(ДополнительныеПараметры.Категория,ДополнительныеПараметры.Отметка);
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПринадлежностьККатегории(Категория,Принадлежность)
	
	СлужебныйСервер.ЗаписатьПринадлежностьККатегории(Параметры.Ключ,Категория,Принадлежность);    
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйРеквизитПриИзменении(Элемент)
	
	УправлениеДопРеквизитами.ПриИзмененииДополнительногоРеквизита(Элемент.Имя,ЭтаФорма[Элемент.Имя],АдресКэшаДопРеквизитов);		
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Отказ Тогда
		УправлениеДопРеквизитами.ЗаписатьДополнительныеРеквизиты(ТекущийОбъект,АдресКэшаДопРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Оповещение = Новый ОписаниеОповещения("ВыборФайлаПродолжение",ЭтаФорма);
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаПродолжение(ВыбранныеФайлы,ДополнительныеПараметры) Экспорт
	
	Если Модифицированность Тогда
		ПоказатьПредупреждение(,"Объект необходимо записать!",15);
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресФайла = "";
	ПоместитьФайл(АдресФайла,ВыбранныеФайлы[0],ВыбранныеФайлы[0],Ложь,УникальныйИдентификатор);
	ДобавитьИзображениеНоменклатуры(АдресФайла,Параметры.Ключ);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзображениеНоменклатуры(Адрес,Ссылка)
	
	Изо = Справочники.Изображения.СоздатьЭлемент();
	Изо.Владелец = Ссылка;
	
	ДанныеФайла = ПолучитьИзВременногоХранилища(Адрес);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДанныеФайла.Записать(ИмяВременногоФайла);
	Картинка = Новый Картинка(ИмяВременногоФайла);
	Хранилище = Новый ХранилищеЗначения(Картинка,Новый СжатиеДанных(9));
	Изо.Хранилище = Хранилище;
	Изо.Записать();
	УдалитьФайлы(ИмяВременногоФайла);   	
	
	ОбновитьИзображения(Изо.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущееИзображение(Команда)
	
	КоличествоИзображений = Изображения.Количество();
	Для инд=1 По КоличествоИзображений-1 Цикл
		ИндПред = инд-1;
		Если АдресТекущегоИзображения = Изображения[инд].Адрес Тогда
			АдресТекущегоИзображения = Изображения[ИндПред].Адрес;
			ОбновитьДоступностьКнопокНавигацииПоКартинкам(КоличествоИзображений,ИндПред);  
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СледующееИзображение(Команда)
	
	КоличествоИзображений = Изображения.Количество();
	Для инд=0 По КоличествоИзображений-1 Цикл
		ИндСлед = инд+1;
		Если АдресТекущегоИзображения = Изображения[инд].Адрес И ИндСлед<=(КоличествоИзображений-1) Тогда
			АдресТекущегоИзображения = Изображения[ИндСлед].Адрес;
			ОбновитьДоступностьКнопокНавигацииПоКартинкам(КоличествоИзображений,ИндСлед);  
		КонецЕсли;
	КонецЦикла;    
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКнопокНавигацииПоКартинкам(КоличествоИзображений,ИндексТекущего)
	
	Элементы.ПредыдущееИзображение.Доступность = ИндексТекущего > 0;
	Элементы.СледующееИзображение.Доступность = (КоличествоИзображений>1 И ИндексТекущего<(КоличествоИзображений-1));
	Элементы.УдалитьИзображение.Доступность = КоличествоИзображений>0;    
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзображение(Команда)
	
	КоличествоИзображений = Изображения.Количество();
	СсылкаТекущего = Неопределено;
	СсылкаСледующего = Неопределено;
	Для инд=0 По КоличествоИзображений-1 Цикл
		Если АдресТекущегоИзображения = Изображения[инд].Адрес Тогда
			АдресТекущегоИзображения = "";
			СсылкаТекущего = Изображения[инд].Ссылка;
			Если КоличествоИзображений>1 Тогда 
				Если инд=КоличествоИзображений-1 Тогда
					СсылкаСледующего = Изображения[0].Ссылка;
				Иначе
					СсылкаСледующего = Изображения[инд+1].Ссылка; 
				КонецЕсли; 			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УдалитьИзображениеНоменклатуры(СсылкаТекущего,СсылкаСледующего);
		
КонецПроцедуры

&НаСервере
Процедура УдалитьИзображениеНоменклатуры(Ссылка,СсылкаСледующего)
	
	Об = Ссылка.ПолучитьОбъект();
	Об.ПометкаУдаления = Истина;
	Об.Записать();
	
	ОбновитьИзображения(СсылкаСледующего);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДополнительногоПоставщика(Команда)
	
	Если Не Элементы.ГруппаДополнительныеПоставщики.Видимость Тогда
		Элементы.ГруппаДополнительныеПоставщики.Видимость = Истина;
	КонецЕсли;
	
	нс = Объект.ДополнительныеПоставщики.Добавить();
	ТекущийЭлемент = Элементы.ДополнительныеПоставщики;
	Элементы.ДополнительныеПоставщики.ТекущаяСтрока = Объект.ДополнительныеПоставщики.Индекс(нс);   	 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВидимость();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДополнительныеПоставщикиПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОсновнойПоставщикПриИзменении(Элемент)
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаЗакупкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		ПоказатьПредупреждение(,"Необходимо записать элемент!");
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Поставщик", Объект.ОсновнойПоставщик);
	ПараметрыОткрытия.Вставить("Номенклатура", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("СтараяЦена", ЦенаЗакупки);
	
	Оповещение = Новый ОписаниеОповещения("РедактированиеЦеныЗакупкиПрдолжение", ЭтаФорма);
	ОткрытьФорму("Справочник.Номенклатура.Форма.ВводНовойЦеныЗакупки", ПараметрыОткрытия, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеЦеныЗакупкиПрдолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЦеныЗакупки();
	
КонецПроцедуры  

&НаКлиенте
Процедура ЦенаПродажиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		ПоказатьПредупреждение(,"Необходимо записать элемент!");
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Номенклатура", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("СтараяЦена", ЦенаПродажи);
	
	Оповещение = Новый ОписаниеОповещения("РедактированиеЦеныПродажиПродолжение", ЭтаФорма);
	ОткрытьФорму("Справочник.Номенклатура.Форма.ВводНовойЦеныПродажи", ПараметрыОткрытия, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеЦеныПродажиПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьЦеныПродажи();
	
КонецПроцедуры


&НаСервере
Функция СгенерироватьАртикулНаСервере()
	
	//ТипВязки
	ТипВязки = Неопределено;
	мсСтроки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000003")));
	Для Каждого Строка Из мсСтроки Цикл 
		ТипВязки = Строка.Значение;
	КонецЦикла;
	
	//Цвет
	Цвет = Неопределено;
	мсСтроки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000002")));
	Для Каждого Строка Из мсСтроки Цикл 
		Цвет = Строка.Значение;
	КонецЦикла;
	
	//Размер
	Размер = Неопределено;
	мсСтроки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизиты.НайтиПоКоду("000000001")));
	Для Каждого Строка Из мсСтроки Цикл 
		Размер = Строка.Значение;
	КонецЦикла;
	
	Возврат Справочники.Номенклатура.ГенерацияАртикула(
		Новый Структура("ТипИзделия, ТипВязки, Цвет, Размер, Цена, ПриДобавлении",
		Объект.Родитель, ТипВязки, Цвет, Размер, 0, Истина)
	);
	
КонецФункции

&НаКлиенте
Процедура СгенерироватьАртикул(Команда)
	
	Объект.Артикул = СгенерироватьАртикулНаСервере();
	
КонецПроцедуры
