
Процедура ВыполнитьРегламент() Экспорт
	
	ИмяФайла = "C:\cmd\ВыполнитьРегламент.txt";
	
	//Определить идет ли выполнение регл
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		
		//Оределить возраст файла
		Если ТекущаяДата() - 60*60 <= Файл.ПолучитьВремяИзменения() Тогда 
			Возврат;
		КонецЕсли;
	Иначе
		
		ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла);
		ЗаписьТекста.Записать("" + ТекущаяДата() + ": Идет выполнение регламентов");
		ЗаписьТекста.Закрыть();
		
	КонецЕсли;
	
	ВыполнитьОбмен();
	
	СнятьТоварыСРезерва();
	
	ЗарезервироватьТовар();
	
	ОбработатьЗаказыНаОжаданииПоступленияТовара();
	
	//Удалить файл
	УдалитьФайлы(ИмяФайла);	
	
КонецПроцедуры


Процедура ВыполнитьОбмен()
	
	Выборка = ПланыОбмена.ОбменССайтом.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Если Выборка.ЭтотУзел ИЛИ Выборка.ПометкаУдаления ИЛИ НЕ Выборка.Активен Тогда 
			Продолжить;
		КонецЕсли;
		
		Обработка = Обработки.ОбменССайтом.Создать();
		Обработка.УзелОбмена = Выборка.Ссылка;
		
		//ВыгрузитьПользователей
		Если Обработка.УзелОбмена.ВыгружатьПользователей Тогда 
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ВыгрузитьПользователей(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьПользователей:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьПользователей:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;
		
		//ЗагрузитьПользователей
		Если Обработка.УзелОбмена.ЗагружатьПользователей Тогда 
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ЗагрузитьПользователей(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьПользователей:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьПользователей:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;
		
		//ВыгрузитьКлассификаторИКаталог
		Если Обработка.УзелОбмена.ВыгружатьТовары Тогда
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ВыгрузитьКлассификаторИКаталог(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьКлассификаторИКаталог:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьКлассификаторИКаталог:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;		
		
		//ВыгрузитьОстаткиТоваров
		Если Обработка.УзелОбмена.ВыгружатьОстаткиТоваров Тогда
			
			ТекДата = ТекущаяДата();
			
			Если Час(ТекДата) = 9 И ТекДата - НачалоЧаса(ТекДата) <= 60*8 Тогда //только в 9 часов утра
			
				стРезультат = Новый Структура("Результат,Ошибки");	
				Обработка.ВыгрузитьОстаткиТоваров(стРезультат);		
				Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
					ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьОстаткиТоваров:" + стРезультат.Ошибки);	
				Иначе 
					ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьОстаткиТоваров:" + стРезультат.Результат);
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		
		Если Обработка.УзелОбмена.ЗагружатьТовары Тогда
			
			ТекДата = ТекущаяДата();
			
			//в определенные часы и если еще не прошло более 8 минут с начала часа
			Если 
				(Час(ТекДата) = 10 Или 
				Час(ТекДата) = 12 Или 
				Час(ТекДата) = 14 Или 
				Час(ТекДата) = 16 Или 
				Час(ТекДата) = 18) И ТекДата - НачалоЧаса(ТекДата) <= 60*8 Тогда 
				
				
			стРезультат = Новый Структура("Результат, Ошибки");	
			Обработка.ЗагрузитьТовары(стРезультат);
			
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьТовары:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьТовары:" + стРезультат.Результат);
			КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;		
		
		//ВыгрузитьЗаказы
		Если Обработка.УзелОбмена.ВыгружатьЗаказы Тогда 
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ВыгрузитьЗаказы(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьЗаказы:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьЗаказы:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;
		
		//ЗагрузитьЗаказы
		Если Обработка.УзелОбмена.ЗагружатьЗаказы Тогда
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ЗагрузитьЗаказы(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьЗаказы:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьЗаказы:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;
		
		//ЗагрузитьДанныеСФормыОбратнойСвязи
		Если Обработка.УзелОбмена.ЗагружатьДанныеФормыОбратнойСвязи Тогда
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ЗагрузитьДанныеСФормыОбратнойСвязи(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьДанныеСФормыОбратнойСвязи:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ЗагрузитьДанныеСФормыОбратнойСвязи:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли;
		
		//ЗагрузитьДанныеСФормыОбратнойСвязи
		Если Обработка.УзелОбмена.ВыгружатьСерийныеНомера Тогда
			
			стРезультат = Новый Структура("Результат,Ошибки");	
			Обработка.ВыгрузитьСерийныеНомера(стРезультат);		
			Если ЗначениеЗаполнено(стРезультат.Ошибки) Тогда
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьСерийныеНомера:" + стРезультат.Ошибки);	
			Иначе 
				ОбщегоНазначения.ЗаписатьСобытие("Обмен", "ВыгрузитьСерийныеНомера:" + стРезультат.Результат);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;	
	
КонецПроцедуры


Процедура СнятьТоварыСРезерва() Экспорт
	
	пРезультат = "";
	
	//Выбрать 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.ДокументРезерва КАК ДокументРезерва,
	|	ТоварыВРезервеОстатки.Склад КАК Склад
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			ДокументРезерва ССЫЛКА Документ.ЗаказПокупателя
	|				И (НЕ ДокументРезерва.Статус.ТоварРезервируется
	|					ИЛИ ДокументРезерва.Дата < &ДатаНачалаУчета)) КАК ТоварыВРезервеОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.ДокументРезерва,
	|	ТоварыВРезервеОстатки.Склад
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			ДокументРезерва ССЫЛКА Документ.ЗаказПокупателя
	|				И ДокументРезерва.Статус.ТоварРезервируется
	|				И ДокументРезерва.Статус.ТоварРезервируетсяДней <> 0
	|				И ""Резервируется но с лимитом по дням"" <> """"
	|				И РАЗНОСТЬДАТ(ДокументРезерва.Дата, &ТекущаяДата, ДЕНЬ) >= ДокументРезерва.Статус.ТоварРезервируетсяДней) КАК ТоварыВРезервеОстатки";	
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчета.Получить());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Документы.ЗаказПокупателя.СнятьтоварСРезерва(ВыборкаДетальныеЗаписи.ДокументРезерва,пРезультат, ВыборкаДетальныеЗаписи.Склад);
		
		ОбщегоНазначения.ЗаписатьСобытие("СнятьТоварыСРезерва", пРезультат);
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗарезервироватьТовар()
	
	пРезультат = "";
	
	//Выбрать 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК ЗаказСсылка
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Статус.ТоварРезервируется
	|	И ЗаказПокупателя.Проведен
	|	И ЗаказПокупателя.Дата >= &ДатаНачалаУчета
	|	И ЗаказПокупателя.Дата >= &ДатаНачала";	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата() - 60*60*24*30)); //За месяц
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчета.Получить());
	Выборка = Запрос.Выполнить().Выбрать();		
	Пока Выборка.Следующий() Цикл
		
		Документы.ЗаказПокупателя.ЗарезервироватьТовар(Выборка.ЗаказСсылка,пРезультат);
		
		ОбщегоНазначения.ЗаписатьСобытие("ЗарезервироватьТовар", пРезультат);
		
	КонецЦикла;
	
КонецПроцедуры

//Когда не хватает товара на остатках заказ имеет статус: Планируется поступление изделия
//Необходимо найти такие заказы и если свободный остаток имеется в полной мере, то изменить на статус Новый
Процедура ОбработатьЗаказыНаОжаданииПоступленияТовара()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втЗаказы
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Статус = &СтатусОжидаетПоступления
	|	И ЗаказПокупателя.Проведен
	|	И ЗаказПокупателя.Дата >= &ДатаНачалаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателяТовары.Ссылка КАК Ссылка,
	|	СУММА(ЗаказПокупателяТовары.Количество) КАК Количество,
	|	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втЗаказыТовары
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары,
	|	втЗаказы КАК втЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяТовары.Ссылка,
	|	ЗаказПокупателяТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказыТовары.Номенклатура КАК Номенклатура,
	|	СУММА(втЗаказыТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	втЗаказыТовары КАК втЗаказыТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаказыТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ вОстатки
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					втТовары.Номенклатура КАК Номенклатура
	|				ИЗ
	|					втТовары КАК втТовары)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ТоварыВРезервеОстатки.КоличествоОстаток) КАК КоличествоРезвер
	|ПОМЕСТИТЬ втРезервы
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					втТовары.Номенклатура КАК Номенклатура
	|				ИЗ
	|					втТовары КАК втТовары)) КАК ТоварыВРезервеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВРезервеОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеОстатки.ДокументРезерва КАК ДокументРезерва,
	|	ТоварыВРезервеОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ТоварыВРезервеОстатки.КоличествоОстаток) КАК КоличествоРезерв
	|ПОМЕСТИТЬ втРезервыПоЗаказам
	|ИЗ
	|	РегистрНакопления.ТоварыВРезерве.Остатки(
	|			,
	|			ДокументРезерва В
	|				(ВЫБРАТЬ
	|					втЗаказы.Ссылка КАК Ссылка
	|				ИЗ
	|					втЗаказы КАК втЗаказы)) КАК ТоварыВРезервеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВРезервеОстатки.Номенклатура,
	|	ТоварыВРезервеОстатки.ДокументРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказыТовары.Ссылка КАК ЗаказСсылка
	|ПОМЕСТИТЬ втЗаказыТоварыСНехваткойОстаткаПредв
	|ИЗ
	|	втЗаказыТовары КАК втЗаказыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервыПоЗаказам КАК втРезервыПоЗаказам
	|		ПО втЗаказыТовары.Ссылка = втРезервыПоЗаказам.ДокументРезерва
	|			И втЗаказыТовары.Номенклатура = втРезервыПоЗаказам.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ вОстатки КАК вОстатки
	|		ПО втЗаказыТовары.Номенклатура = вОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРезервы КАК втРезервы
	|		ПО втЗаказыТовары.Номенклатура = втРезервы.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(вОстатки.КоличествоОстаток, 0) - (ЕСТЬNULL(втРезервы.КоличествоРезвер, 0) - ЕСТЬNULL(втРезервыПоЗаказам.КоличествоРезерв, 0)) < втЗаказыТовары.Количество
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗаказыТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказы.Ссылка КАК ЗаказСсылка
	|ИЗ
	|	втЗаказы КАК втЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыТоварыСНехваткойОстаткаПредв КАК втЗаказыТоварыСНехваткойОстаткаПредв
	|		ПО втЗаказы.Ссылка = втЗаказыТоварыСНехваткойОстаткаПредв.ЗаказСсылка
	|ГДЕ
	|	втЗаказыТоварыСНехваткойОстаткаПредв.ЗаказСсылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("СтатусОжидаетПоступления", Справочники.СтатусыЗаказов.НайтиПоКоду("000000014")); //Ожидается поступление товара	
	Запрос.УстановитьПараметр("ДатаНачалаУчета", Константы.ДатаНачалаУчета.Получить());
	Выборка = Запрос.Выполнить().Выбрать();
		
	СтатусВОбработке = Справочники.СтатусыЗаказов.НайтиПоКоду("000000003"); //В обработке
	
	Пока Выборка.Следующий() Цикл
		
		ЗаказОбъект = Выборка.ЗаказСсылка.ПолучитьОбъект();
		ЗаказОбъект.Статус = СтатусВОбработке;
		ЗаказОбъект.Записать();
		
		ОбщегоНазначения.ЗаписатьСобытие("ОбработатьЗаказыНаОжаданииПоступленияТовара", "" +  Выборка.ЗаказСсылка + " изменен статус на ""В обработке"" в связи с поступлением товара на остаток в полном объеме");
		
	КонецЦикла;
		
КонецПроцедуры